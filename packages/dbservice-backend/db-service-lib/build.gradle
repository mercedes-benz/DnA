buildscript {
    ext {
        springBootVersion = "3.2.1"
        releaseVersion = "0.0.1-SNAPSHOT"
    }
    repositories {
        //  mavenLocal()
         mavenCentral()
         gradlePluginPortal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.org.hidetake:gradle-swagger-generator-plugin:2.19.2")
        classpath("org.apache.maven.plugins:maven-dependency-plugin:3.1.2")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3")

    }

}


plugins {
    id "java"
    id "eclipse"
    id "groovy"
    id "io.spring.dependency-management" version "1.0.15.RELEASE"
    id "org.springframework.boot" version "${springBootVersion}"
    id "maven-publish"
    id "org.hidetake.swagger.generator" version "2.19.2"
    id "org.sonarqube" version "3.3"
}

// apply plugin: "io.spring.dependency-management"
// apply plugin: "org.springframework.boot"
// apply plugin: "maven-publish"
// apply plugin: "org.hidetake.swagger.generator"
// apply plugin: 'org.sonarqube'
// apply plugin: 'groovy'

repositories {
    
    //  mavenLocal()
     mavenCentral()
     gradlePluginPortal()
}

group 'com.daimler.data'
version = releaseVersion;

sourceCompatibility = 1.17
targetCompatibility = 1.17
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

swaggerSources {

    dbService {
    def dbServiceyaml = "${rootDir}/src/main/resources/api/dbService.yml"
    def dbServiceJson = "${rootDir}/src/main/resources/api/dbService.json"
    inputFile = file(dbServiceyaml)

    def ignoreFile = "${rootDir}/src/main/resources/api/.swagger-codegen-ignore"

    code {
      language = 'spring'
      configFile = file(dbServiceJson)
      rawOptions = ['--ignore-file-override', ignoreFile]
      components = ['models', 'apis']
    }
  }
//     position {
//     def positionyaml = "${rootDir}/src/main/resources/api/position.yml"
//     def positionJson = "${rootDir}/src/main/resources/api/position.json"
//     inputFile = file(positionyaml)

//     def ignoreFile = "${rootDir}/src/main/resources/api/.swagger-codegen-ignore"

//     code {
//       language = 'spring'
//       configFile = file(positionJson)
//       rawOptions = ['--ignore-file-override', ignoreFile]
//       components = ['models', 'apis']
//     }
//   }
//     comments {
//     def commentsyaml = "${rootDir}/src/main/resources/api/comments.yml"
//     def commentsJson = "${rootDir}/src/main/resources/api/comments.json"
//     inputFile = file(commentsyaml)

//     def ignoreFile = "${rootDir}/src/main/resources/api/.swagger-codegen-ignore"

//     code {
//       language = 'spring'
//       configFile = file(commentsJson)
//       rawOptions = ['--ignore-file-override', ignoreFile]
//       components = ['models', 'apis']
//     }
//   }
//     attachment {
//     def attachmentyaml = "${rootDir}/src/main/resources/api/attachment.yml"
//     def attachmentJson = "${rootDir}/src/main/resources/api/attachment.json"
//     inputFile = file(attachmentyaml)

//     def ignoreFile = "${rootDir}/src/main/resources/api/.swagger-codegen-ignore"

//     code {
//       language = 'spring'
//       configFile = file(attachmentJson)
//       rawOptions = ['--ignore-file-override', ignoreFile]
//       components = ['models', 'apis']
//     }
//   }
//     reality_check {
//     def realitycheckyaml = "${rootDir}/src/main/resources/api/reality_check.yml"
//     def realitycheckJson = "${rootDir}/src/main/resources/api/reality_check.json"
//     inputFile = file(realitycheckyaml)

//     def ignoreFile = "${rootDir}/src/main/resources/api/.swagger-codegen-ignore"

//     code {
//       language = 'spring'
//       configFile = file(realitycheckJson)
//       rawOptions = ['--ignore-file-override', ignoreFile]
//       components = ['models', 'apis']
//     }
//   }
//     lov {
//     def lovyaml = "${rootDir}/src/main/resources/api/lov.yml"
//     def lovJson = "${rootDir}/src/main/resources/api/lov.json"
//     inputFile = file(lovyaml)

//     def ignoreFile = "${rootDir}/src/main/resources/api/.swagger-codegen-ignore"

//     code {
//       language = 'spring'
//       configFile = file(lovJson)
//       rawOptions = ['--ignore-file-override', ignoreFile]
//       components = ['models', 'apis']
//     }
//   }
}

compileJava {
  dependsOn processResources
  dependsOn swaggerSources.dbService.code
  source "${swaggerSources.dbService.code.outputDir}/src/main/java"
//     dependsOn swaggerSources.position.code
//   source "${swaggerSources.position.code.outputDir}/src/main/java"
//     dependsOn swaggerSources.comments.code
//   source "${swaggerSources.comments.code.outputDir}/src/main/java"
//     dependsOn swaggerSources.attachment.code
//   source "${swaggerSources.attachment.code.outputDir}/src/main/java"
//     dependsOn swaggerSources.reality_check.code
//   source "${swaggerSources.reality_check.code.outputDir}/src/main/java"
//     dependsOn swaggerSources.lov.code
//   source "${swaggerSources.lov.code.outputDir}/src/main/java"
}

sourceSets {
  unitTest {
    java { srcDir 'src/test/groovy' }
    resources { srcDir 'src/test/resources' }
    compileClasspath += sourceSets.main.runtimeClasspath
  }
  main {
    java { srcDirs = srcDirs }
    java { srcDirs += "${swaggerSources.dbService.code.outputDir}/src/main/java" }
    //     java { srcDirs += "${swaggerSources.position.code.outputDir}/src/main/java" }
    //     java { srcDirs += "${swaggerSources.comments.code.outputDir}/src/main/java" }
    //     java { srcDirs += "${swaggerSources.attachment.code.outputDir}/src/main/java" }
    //     java { srcDirs += "${swaggerSources.reality_check.code.outputDir}/src/main/java" }
    //     java { srcDirs += "${swaggerSources.lov.code.outputDir}/src/main/java" }
  }
}


dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.4.0'

    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.3'


    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.2.1'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'
    implementation('org.apache.tomcat.embed:tomcat-embed-jasper:10.0.5')

    implementation 'org.apache.commons:commons-text:1.10.0'

    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation group: 'org.json', name: 'json', version: '20190722'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'

    //validated
    implementation group: 'javax.validation', name: 'validation-api', version: '1.1.0.Final'
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.0.2'
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: '7.0.2.Final'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.3.0'
    implementation group: 'com.vladmihalcea', name: 'hibernate-types-60', version: '2.21.1'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.22.3'
    implementation group: 'org.hibernate.orm', name: 'hibernate-core', version: '6.1.4.Final'
    implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.3.1'


    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
    implementation group: 'io.swagger.core.v3', name: 'swagger-core', version: '2.2.20'
    implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.2.20'
    implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.6'
    swaggerCodegen 'org.openapitools:openapi-generator-cli:5.3.1'
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-stream', version: '4.1.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.5.0'

    //graphql
    implementation "org.springframework.boot:spring-boot-starter-graphql:${springBootVersion}"
    implementation "com.graphql-java-kickstart:graphql-java-tools:12.0.0"
  implementation 'com.graphql-java:graphql-java-extended-scalars:21.0'

}

sonarqube {
  properties {
    property "sonar.projectName", "FFCLERS-WBV-TTS-BE"
    property "sonar.projectKey", "FFCLERS-WBV-TTS-BE"
  }
}
 