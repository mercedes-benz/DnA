# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
#
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : fabricWorkspaces.yaml
#  **
#  ** Module     : Tools/FabricWorkspaces
#  **

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  boonbaluri
#
#  Bug Number         :
#  Changed By         :
#  Change Description :
#  Change On          :
#  Search String      :
#
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Fabric workspaces management service"
host: "localhost:9292"
basePath: "/api/1.0"
consumes:
  - "application/json"
produces:
  - "application/json"
tags:
  - name: "solutions"
    description: "This service is used for fabric workspaces maintenance."

schemes:
  - "https"

paths:
  # path to create a new solution and fetch all valid solution or by intent
  #
  #  supprorted http methods GET, POST and DELETE
  #
  # path example ../fabric-workspaces
  /lov/fabric-workspaces:
    get:
      tags:
        - "lovs"
      summary: "List of values for available workspaces"
      description: "Get all workspaces. This endpoints will be used to get all valid available fabric workspace records."
      operationId: "getWorkspacesLov"
      parameters:            
        - name: offset
          in: query
          description: page number from which listing of workspaces should start. Offset. Example 2
          required: false
          type: integer
        - name: limit
          in: query
          description: page size to limit the number of workspaces, Example 15
          required: false
          type: integer
        - name: sortBy
          in: query
          description: Sort workspaces by a given variable like name, createdOn
          required: false
          type: string
          enum: [name, createdOn]
        - name: sortOrder
          in: query
          description: Sort solutions based on the given order, example asc,desc
          required: false
          type: string
          enum: [asc,desc]
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/FabricWorkspacesCollectionVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
          
  /fabric-workspaces:
    get:
      tags:
        - "fabric-workspaces"
      summary: "Get all workspaces for the user."
      description: "Get all workspaces. This endpoints will be used to get all valid available fabric workspace records."
      operationId: "getAll"
      parameters:            
        - name: offset
          in: query
          description: page number from which listing of workspaces should start. Offset. Example 2
          required: false
          type: integer
        - name: limit
          in: query
          description: page size to limit the number of workspaces, Example 15
          required: false
          type: integer
        - name: sortBy
          in: query
          description: Sort workspaces by a given variable like name, createdOn
          required: false
          type: string
          enum: [name, createdOn]
        - name: sortOrder
          in: query
          description: Sort solutions based on the given order, example asc,desc
          required: false
          type: string
          enum: [asc,desc]
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/FabricWorkspacesCollectionVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

    post:
      tags:
        - "fabric-workspaces"
      summary: "Adds a new fabric workspace."
      description: "Adds a new non existing workspace."
      operationId: "create"
      parameters:
        - name: "workspaceCreateVO"
          in: "body"
          description: "Request Body that contains data required for creating a new workspace"
          required: true
          schema:
            $ref: "#/definitions/FabricWorkspaceCreateRequestVO"    
      responses:
        201:
          description: "Returns message of succes or failure "
          schema:
            $ref: "#/definitions/FabricWorkspaceResponseVO"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  # Fetch FabricWorkspace by intent
  #
  #  Supported http methods GET
  #
  # path example ../fabric-workspaces
  /fabric-workspaces/{id}:
   get:
      tags:
        - "fabric-workspaces"
      summary: "Get workspace for a given Id."
      description: "Get workspace for a given identifier. This endpoints will be used to get fabric workspace for the given identifier."
      operationId: "getById"
      parameters:
        - name: "id"
          in: "path"
          description: "Fabric Workspace ID to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/FabricWorkspaceVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
   put:
      tags:
        - "fabric-workspaces"
      summary: "Update existing workspace."
      description: "Updates an existing workspace."
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          description: "Fabric Workspace ID to be updated"
          required: true
          type: "string"
        - name: "workspaceUpdateRequestVO"
          in: "body"
          description: "Request Body that contains data required for updating an existing workspace"
          required: true
          schema:
            $ref: "#/definitions/FabricWorkspaceUpdateRequestVO"
      responses:
        200:
          description: "Updated successfully"
          schema:
            $ref: "#/definitions/FabricWorkspaceResponseVO"
        404:
          description: "No workspace found to update"
          schema:
            $ref: "#/definitions/GenericMessage"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
   delete:
      tags:
        - "fabric-workspaces"
      summary: "Delete workspace for a given Id."
      description: "Delete workspace for a given identifier."
      operationId: "delete"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be deleted"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
  
  /fabric-workspaces/{id}/rolerequest:
    post:
        tags:
          - "fabric-workspaces"
        summary: "request a  fabric workspace role for a user."
        description: "request a  fabric workspace role for a user."
        operationId: "requestRole"
        parameters:
          - name: "id"
            in: "path"
            required: true
            type: "string"
          - name: "roleRequestVO"
            in: "body"
            description: "Request Body that contains data required for requesting a workspace role"
            required: true
            schema:
              $ref: "#/definitions/FabricWorkspaceRoleRequestVO"    
        responses:
          201:
            description: "Returns message of succes or failure "
            schema:
              $ref: "#/definitions/GenericMessage"
          400:
            description: "Bad Request"
            schema:
              $ref: "#/definitions/GenericMessage"
          401:
            description: "Request does not have sufficient credentials."
          403:
            description: "Request is not authorized."
          405:
            description: "Method not allowed"
          500:
            description: "Internal error"

  /fabric-workspaces/createrole:
    post:
        tags:
          - "fabric-workspaces"
        summary: "create new role from dna application."
        description: "create new role from dna application."
        operationId: "createRole"
        parameters:
          - name: "roleRequestVO"
            in: "body"
            description: "Request Body that contains data required for requesting a workspace role"
            required: true
            schema:
              $ref: "#/definitions/createRoleRequestVO"    
        responses:
          201:
            description: "Returns message of succes or failure "
            schema:
              $ref: "#/definitions/GenericMessage"
          400:
            description: "Bad Request"
            schema:
              $ref: "#/definitions/GenericMessage"
          401:
            description: "Request does not have sufficient credentials."
          403:
            description: "Request is not authorized."
          405:
            description: "Method not allowed"
          500:
            description: "Internal error"

  /fabric-workspaces/{id}/dnaroles:
    get:
        tags:
          - "fabric-workspaces"
        summary: "get all dna roles for a user."
        description: "get all dna roles for a user"
        operationId: "getAllUserDnaRoles"
        parameters:
          - name: "id"
            in: "path"
            required: true
            type: "string"  
        responses:
          201:
            description: "Returns message of succes or failure "
            schema:
              $ref: "#/definitions/DnaRoleCollectionVO"
          400:
            description: "Bad Request"
          401:
            description: "Request does not have sufficient credentials."
          403:
            description: "Request is not authorized."
          405:
            description: "Method not allowed"
          500:
            description: "Internal error"


definitions:
  CapacityVO:
    type: object
    properties:
      id:
        type: string
        description: "Identifier for the capacity"
      name:
        type: string
        description: "Name of the Capacity"
      sku:
        type: string
      region:
        type: string
      state:
        type: string
  
  CapacityCollectionVO:
    type: object
    properties:
      capacities: 
        description: "Array of capacities details"
        type: array
        items:
          $ref: "#/definitions/CapacityVO"
          
  FabricWorkspaceVO:
    type: object
    properties:
      id: 
        type: string
        description: "ID for the fabric workspace"
      name:
        type: string
        description: "Name of the fabric workspace"
        maxLength: 256
      typeOfProject:
        type: string
      #  enum: ["Playground","Proof of Concept","Production"]
      description:
        type: string
        maxLength: 4000
      divisionId:
        type: string
      division:
        type: string
      subDivisionId:
        type: string
      subDivision:
        type: string
      department:
        type: string
      tags:
        type: array
        items:
         type: string
      dataClassification:
        type: string
      #  enum: ["Confidential","Internal","Public","Secret"]
      archerId:
        type: string
      procedureId:
        type: string
      termsOfUse:
        type: boolean
      hasPii:
        type: boolean
      costCenter:
        type: string
      internalOrder:
        type: string
      status:
        $ref: "#/definitions/FabricWorkspaceStatusVO"
      relatedSolutions:
        type: array
        items:
         $ref: "#/definitions/ProjectReferenceDetailsVO"
      relatedReports:
        type: array
        items:
         $ref: "#/definitions/ProjectReferenceDetailsVO"
      capacity:
        $ref: "#/definitions/CapacityVO"
      createdBy:
        $ref: "#/definitions/CreatedByVO"
      createdOn:
        type: string
        format: date
      role:
        type: string
      lakehouses:
        type: array
        items:
          $ref: "#/definitions/FabricLakehouseVO"
  
  FabricWorkspaceStatusVO:
    type: object
    properties:
      state:
         type: string
      entitlements:
         type: array
         items:
          $ref: "#/definitions/EntitlementDetailsVO" 
      roles:
         type: array
         items:
          $ref: "#/definitions/RoleDetailsVO"
      microsoftGroups:
         type: array
         items:
          $ref: "#/definitions/GroupDetailsVO"
  
  EntitlementDetailsVO:
    type: object
    properties:
      entitlementId:
        type: string
      displayName:
        type: string
      state:
        type: string

  RoleDetailsVO:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      state:
        type: string
      link:
        type: string
      assignEntitlementsState:
        type: string
      roleOwner:
        type: string
      globalRoleAssigner:
        type: string
      roleApprover:
        type: string
      entitlements:
        type: array
        items:
         $ref: "#/definitions/EntitlementDetailsVO"
          
  GroupDetailsVO:
    type: object
    properties:
      groupName:
       type: string
      groupId:
       type: string
      state:
       type: string
                    
  ProjectReferenceDetailsVO:
    type: object
    properties:
      id:
       type: string
      name:
       type: string
       
  FabricWorkspaceUpdateRequestVO:
    type: object
    properties:
      name:
        type: string
        description: "Name of the fabric workspace"
        maxLength: 256
      typeOfProject:
        type: string
      #  enum: ["Playground","Proof of Concept","Production"]
      description:
        type: string
        maxLength: 4000
      divisionId:
        type: string
      division:
        type: string
      subDivisionId:
        type: string
      subDivision:
        type: string
      department:
        type: string
      tags:
        type: array
        items:
         type: string
      dataClassification:
        type: string
      #  enum: ["Confidential","Internal","Public","Secret"]
      archerId:
        type: string
      procedureId:
        type: string
      termsOfUse:
        type: boolean
      hasPii:
        type: boolean
      costCenter:
        type: string
      internalOrder:
        type: string
      relatedSolutions:
        type: array
        items:
         $ref: "#/definitions/ProjectReferenceDetailsVO"
      relatedReports:
        type: array
        items:
         $ref: "#/definitions/ProjectReferenceDetailsVO"
      
  FabricWorkspacesCollectionVO:
    description: "Collection of fabric workspaces."
    type: object
    properties:
      totalCount:
        type: integer
        description: "Total Record Count"
      records:
        type: array
        items:
          $ref: "#/definitions/FabricWorkspaceVO"
  
  FabricWorkspaceCreateRequestVO:
    description: "Object to hold request to create new fabric workspace"
    type: object
    properties:
      data:
        $ref: "#/definitions/FabricWorkspaceVO"
  
  FabricWorkspaceResponseVO:
    description: "Response object for fabric workspace operations"
    type: object
    properties:
      data:
        $ref: "#/definitions/FabricWorkspaceVO"
      responses:
        $ref: "#/definitions/GenericMessage"
      

  CreatedByVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of user"
      firstName:
        type: string
        description: "First Name of the user"
      lastName:
        type: string
        description: "Last Name of the user"
      department:
        type: string
        description: "Department of the user"
      email:
        type: string
        description: "E-Mail of the user"
      mobileNumber:
        type: string
        description: "Mobile number of the user"
        
  FabricLakehousesCollectionVO:
    description: "Collection of fabric lakehouses."
    type: object
    properties:
      totalCount:
        type: integer
        description: "Total Record Count"
      records:
        type: array
        items:
          $ref: "#/definitions/FabricLakehouseVO"
 

  FabricLakehouseCreateRequestVO:
    description: "Lakehouse details of fabric workspace."
    type: object
    properties:
      name:
        type: string
        description: "Name of lakehouse belonging to fabric workspace"
      description:
        type: string
        description: "description of lakehouse belonging to fabric workspace"
        
  FabricLakehouseVO:
    description: "Lakehouse details of fabric workspace."
    type: object
    properties:
      id:
        type: string
        description: "Id of lakehouse belonging to fabric workspace"
      name:
        type: string
        description: "Name of lakehouse belonging to fabric workspace"
      description:
        type: string
        description: "description of lakehouse belonging to fabric workspace"
      sensitivityLabel:
        type: string
        description: "sensitivityLabel of lakehouse belonging to fabric workspace"
      shortcuts:
        type: array
        items:
          $ref: "#/definitions/ShortcutVO"


  ShortcutCreateRequestVO:
    type: object
    properties:
      accessKey:
        type: string
        description: "Name of shortcut"
      secretKey:
        type: string
        description: "path of shortcut"
      bucketname:
        type: string
        description: "bucketname of shortcut"
      bucketId:
        type: string
        description: "bucketid of shortcut"
        
  FabricShortcutsCollectionVO:
    description: "Collection of fabric lakehouse shortcuts."
    type: object
    properties:
      totalCount:
        type: integer
        description: "Total Record Count"
      records:
        type: array
        items:
          $ref: "#/definitions/ShortcutVO"
                        
  ShortcutVO:
    type: object
    properties:
      name:
        type: string
        description: "Name of shortcut"
      path:
        type: string
        description: "path of shortcut"
      bucketname:
        type: string
        description: "bucketname of shortcut"
      bucketpath:
        type: string
        description: "bucketpath of shortcut"
      connectionId:
        type: string
        description: "connectionId of shortcut"
      connectionName:
        type: string
        description: "connection name used for creating shortcut"
  
  MessageDescription:
    type: object
    properties:
      message:
        type: string
        description: "message of error or warning"

  GenericMessage:
    type: object
    properties:
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"

  FabricWorkspaceRoleRequestVO:
    type: object
    properties:
      data:
        type: object
        $ref: "#/definitions/RolesListVO"
      
  

  RolesListVO:
    type: object
    properties:
      roleList:
          type: array
          items:
            $ref: "#/definitions/RolesVO"
      reason:
        type: string

  RolesVO:
    type: object
    properties:
      roleID:
        type: string
      validFrom:
        type: string
        pattern: "^\\d{4}-\\d{2}-\\d{2}$"
      validTo:
        type: string
        pattern: "^\\d{4}-\\d{2}-\\d{2}$"

  createRoleRequestVO:
    type: object
    properties:
      data:
        type: object
        properties:
          roleName:
            type: string
            pattern: "^[A-Za-z0-9]+[A-Za-z0-9._-]{1,60}$"

  DnaRoleCollectionVO:
    type: object
    properties:
      data:
        type: object
        properties:
          roles:
            type: array
            items: 
              type: string


    
