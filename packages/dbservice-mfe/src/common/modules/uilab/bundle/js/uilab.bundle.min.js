/*!
 * UiLab v1.0.0
 * Copyright 2011-2020 Daimler
 */
!(function (e, t) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = t())
    : 'function' == typeof define && define.amd
    ? define(t)
    : ((e = e || self).uilab = t());
})(this, function () {
  'use strict';
  var e = function (e) {
      return e ? [].slice.call(e) : [];
    },
    t = function (e) {
      var t = e.parentNode;
      return t.classList.contains('wrapper') && (t = t.parentNode), t;
    },
    n = function (e, t, n) {
      void 0 === t && (t = !0);
      var r = !1;
      e.addEventListener('mousedown', function (o) {
        var i = o.target.nodeName;
        if ('INPUT' === i || 'I' === i || 'BUTTON' === i || 'A' === i) {
          o.stopPropagation(), (r = !0);
          var a = e,
            s = e.querySelector('.animation-wrapper');
          s && (a = s);
          var c = a.getBoundingClientRect(),
            l = c.width / 2,
            d = c.height / 2;
          t || ((l = o.pageX - (c.x + window.pageXOffset)), (d = o.pageY - (c.y + window.pageYOffset)));
          var u,
            f,
            p,
            h,
            m =
              ((p = n || window.getComputedStyle(a).color),
              (h = p.match(/rgba?\((\d{1,3}), ?(\d{1,3}), ?(\d{1,3})\)?(?:, ?(\d(?:\.\d?))\))?/))
                ? { red: h[1], green: h[2], blue: h[3] }
                : {});
          u = window.requestAnimationFrame(function e(t) {
            f || (f = t);
            var n = t - f,
              o = 'circle at ' + l + 'px ' + d + 'px',
              i = 'rgba(' + m.red + ', ' + m.green + ', ' + m.blue + ',0.3)',
              s = '100%';
            if (n < 450) {
              var c = (n / 750) * (2.5 - n / 750);
              (i = 'rgba(' + m.red + ', ' + m.green + ', ' + m.blue + ', ' + (r ? 0.3 : 0.3 * (1.5 - c)) + ')'),
                (s = 90 * c + '%'),
                (a.style.backgroundImage = 'radial-gradient(' + o + ', ' + i + ' ' + s + ', transparent ' + s + ')'),
                (u = window.requestAnimationFrame(e));
            } else (a.style.backgroundImage = r ? 'radial-gradient(' + o + ', ' + i + ' ' + s + ', transparent ' + s + ')' : 'none'), window.cancelAnimationFrame(u);
          });
        }
      });
      var o = function () {
        var t = e,
          n = e.querySelector('.animation-wrapper');
        n && (t = n), (t.style.backgroundImage = 'none'), (r = !1);
      };
      e.addEventListener('mouseup', o), e.addEventListener('mouseleave', o);
    },
    r = function (e) {
      if (e.createTextRange) {
        var t = document.selection.createRange().duplicate();
        return t.moveEnd('character', e.value.length), '' === t.text ? e.value.length : e.value.lastIndexOf(t.text);
      }
      return e.selectionStart;
    },
    o = (function () {
      function t(e) {
        (this._element = e), this.selectActiveLink(), this._addEventListeners();
      }
      var n = t.prototype;
      return (
        (n.selectActiveLink = function () {
          e(this._element.querySelectorAll('a[href="' + document.location.pathname + '"]')).forEach(function (e) {
            var t = e.parentNode.parentNode.parentNode;
            t && t.classList.contains('has-sub-nav') && t.classList.add('opened');
          });
        }),
        (n.collapseAll = function () {
          e(this._element.querySelectorAll('.has-sub-nav')).forEach(function (e) {
            e.classList.remove('opened');
          });
        }),
        (n.removeActive = function () {
          e(this._element.querySelectorAll('.active')).forEach(function (e) {
            e.classList.remove('active');
          });
        }),
        (n._addEventListeners = function () {
          var t = this;
          e(this._element.querySelectorAll('.has-sub-nav>.nav-link')).forEach(function (e) {
            e.addEventListener('click', function (e) {
              var t = e.target.parentNode;
              t.classList.contains('opened')
                ? (t.style.height = null)
                : (t.style.height = t.querySelectorAll('.nav-link').length * (t.clientHeight + 2) - 1 + 'px'),
                t.classList.toggle('opened');
            });
          }),
            e(this._element.querySelectorAll('.nav-item:not(.has-sub-nav)')).forEach(function (e) {
              e.addEventListener('click', function (e) {
                t.removeActive(), e.target.parentNode.classList.add('active');
              });
            });
        }),
        t
      );
    })(),
    i = (function () {
      function t() {}
      return (
        (t.defaultSetup = function () {
          e(document.querySelectorAll('.btn:not(.btn-text)')).forEach(function (e) {
            e.classList.contains('btn-secondary')
              ? n(e, !1, 'rgba(192, 200, 208, 1)')
              : e.classList.contains('btn-icon-circle')
              ? n(e)
              : n(e, !1);
          });
        }),
        t
      );
    })();
  i.defaultSetup();
  var a = (function () {
    function t() {}
    return (
      (t.defaultSetup = function () {
        var t,
          r,
          o,
          i,
          a,
          s,
          c = document.getElementsByClassName('custom-select');
        for (t = 0; t < c.length; t++) {
          (o = c[t].getElementsByTagName('select')[0]), (i = document.createElement('DIV'));
          var l = document.createElement('SPAN');
          l.setAttribute('class', 'label');
          var d = o.hasAttribute('multiple');
          if (((a = document.createElement('DIV')), d)) {
            var u = document.createElement('SPAN');
            u.setAttribute('class', 'values'),
              i.appendChild(u),
              i.setAttribute('class', 'select-selected multiple'),
              a.setAttribute('class', 'select-items multiple select-hide'),
              (l.innerHTML =
                '<label class="checkbox"><span class="wrapper"><input type="checkbox" value="label"/></span><span class="label">All</span></label>');
          } else
            i.setAttribute('class', 'select-selected'),
              a.setAttribute('class', 'select-items select-hide'),
              (l.innerHTML = o.options[o.selectedIndex].innerHTML);
          i.appendChild(l);
          var f = document.createElement('SPAN');
          f.setAttribute('class', 'animation-wrapper'), i.appendChild(f);
          var p = document.createElement('I');
          for (
            p.setAttribute('class', 'icon down-up-flip'), i.appendChild(p), c[t].appendChild(i), n(i.parentNode), r = 0;
            r < o.length;
            r++
          ) {
            s = document.createElement('DIV');
            var h = o.options[r].innerHTML,
              m = o.options[r].value;
            d
              ? ((s.innerHTML =
                  '<label class="checkbox"><span class="wrapper"><input type="checkbox" data-index="' +
                  r +
                  '" value="' +
                  m +
                  '"/></span><span class="label">' +
                  h +
                  '</span></label>'),
                s.addEventListener('click', function (e) {
                  e.stopPropagation();
                  var t = this.parentNode,
                    n = t.previousSibling.querySelector('.checkbox');
                  if ('INPUT' === e.target.nodeName) {
                    var r = t.querySelectorAll('input[type="checkbox"]').length,
                      o = t.querySelectorAll('input[type="checkbox"]:checked').length,
                      i = n.querySelector('input[type="checkbox"]'),
                      a = t.parentNode.querySelector('select');
                    (i.checked = r === o),
                      i.checked ? n.classList.add('checked') : n.classList.remove('checked'),
                      (a.options[e.target.getAttribute('data-index')].selected = e.target.checked);
                  }
                }))
              : (0 === r && s.setAttribute('class', 'same-as-selected'),
                (s.innerHTML = h),
                s.addEventListener('click', function () {
                  var e,
                    t,
                    n,
                    r = this.parentNode.parentNode.getElementsByTagName('select')[0],
                    o = this.parentNode.previousSibling.childNodes[0];
                  for (t = 0; t < r.length; t++)
                    if (r.options[t].innerHTML === this.innerHTML) {
                      for (
                        r.selectedIndex = t,
                          o.innerHTML = this.innerHTML,
                          e = this.parentNode.getElementsByClassName('same-as-selected'),
                          n = 0;
                        n < e.length;
                        n++
                      )
                        e[n].removeAttribute('class');
                      this.setAttribute('class', 'same-as-selected');
                      break;
                    }
                  o.click();
                })),
              a.appendChild(s);
          }
          c[t].appendChild(a),
            i.addEventListener('click', function (t) {
              var n = t.target.parentNode,
                r = this.nextSibling;
              if ('DIV' === n.nodeName)
                t.stopPropagation(),
                  g(this),
                  this.nextSibling.classList.toggle('select-hide'),
                  this.classList.toggle('open');
              else if ((t.stopPropagation(), 'INPUT' === t.target.nodeName)) {
                var o = r.parentNode.querySelector('select');
                e(r.querySelectorAll('.checkbox')).forEach(function (e) {
                  var n = e.querySelector('input[type="checkbox"]');
                  t.target.checked ? e.classList.add('checked') : e.classList.remove('checked'),
                    (n.checked = t.target.checked),
                    (o.options[n.getAttribute('data-index')].selected = t.target.checked);
                });
              }
              this.classList.contains('multiple') && v(this);
            });
        }
        function v(t) {
          var n = t.nextSibling.querySelectorAll('.checkbox.checked'),
            r = t.querySelector('.values'),
            o = t.querySelector('.checkbox>.label'),
            i = [];
          e(n).forEach(function (e) {
            i.push(e.querySelector('.label').innerHTML);
          }),
            i.length && !t.classList.contains('open')
              ? ((r.innerHTML = i.join(', ')), (o.style.display = 'none'))
              : ((r.innerHTML = ''), (o.style.display = ''));
        }
        function g(e) {
          var t,
            n = [],
            r = document.getElementsByClassName('select-items'),
            o = document.getElementsByClassName('select-selected');
          for (t = 0; t < o.length; t++) {
            var i = o[t];
            e === i ? n.push(t) : i.classList.remove('open'), i.classList.contains('multiple') && v(i);
          }
          for (t = 0; t < r.length; t++) n.indexOf(t) && r[t].classList.add('select-hide');
        }
        document.addEventListener('click', g);
      }),
      t
    );
  })();
  a.defaultSetup();
  var s = (function () {
    function r() {}
    return (
      (r.defaultSetup = function () {
        e(document.querySelectorAll('.checkbox input, .radio input, .legend input')).forEach(function (e) {
          n(e.parentNode),
            'checkbox' === e.type &&
              e.addEventListener('change', function (e) {
                var n = t(e.target);
                e.target.checked ? n.classList.add('checked') : n.classList.remove('checked');
              });
        }),
          e(document.querySelectorAll('.switch input')).forEach(function (e) {
            n(e.parentNode),
              e.addEventListener('change', function (e) {
                var n = t(e.target);
                e.target.checked ? n.classList.add('on') : n.classList.remove('on');
              });
          }),
          e(document.querySelectorAll('.legend input')).forEach(function (n) {
            n.addEventListener('change', function (n) {
              var r = t(n.target);
              e(document.querySelectorAll('.legend input[name=' + n.target.name + ']')).forEach(function (e) {
                e.checked || t(e).classList.remove('active');
              }),
                r.classList.add('active');
            });
          });
      }),
      r
    );
  })();
  s.defaultSetup();
  var c = (function () {
    function t() {}
    return (
      (t.defaultSetup = function () {
        function t(e, t) {
          var n = e.getAttribute('step-value'),
            r = parseFloat(n);
          e.focus();
          var o = parseFloat(e.value || 0);
          t ? (o -= r) : (o += r);
          var i = 0;
          -1 !== n.indexOf('.') && (i = n.split('.')[1].length), (e.value = o.toFixed(i));
        }
        e(document.querySelectorAll('.input-field, .input-field-area')).forEach(function (e) {
          if (
            (e.addEventListener('focus', function (e) {
              e.target.parentNode.classList.add('focused');
            }),
            e.addEventListener('blur', function (e) {
              var t = e.target,
                n = t.parentNode;
              n.classList.remove('focused');
              var r = n.querySelector('.error-message');
              if (t.hasAttribute('required') && '' === t.value.trim()) {
                if ((n.classList.add('error'), t.hasAttribute('required-error'))) {
                  var o = t.getAttribute('required-error');
                  r
                    ? (r.innerHTML = o)
                    : ((r = document.createElement('SPAN')).classList.add('error-message'),
                      (r.innerHTML = o),
                      n.append(r));
                }
              } else n.classList.remove('error'), r && n.removeChild(r);
            }),
            e.classList.contains('numeric'))
          ) {
            var n = e.parentNode;
            if (e.hasAttribute('step-value')) {
              e.classList.add('has-step-value');
              var o = document.createElement('I'),
                i = document.createElement('I');
              o.classList.add('icon', 'arrow', 'up'), i.classList.add('icon', 'arrow', 'down');
              var a = document.createElement('DIV');
              a.classList.add('trigger-wrapper'),
                (a.style.top = e.offsetTop + 'px'),
                a.append(o),
                a.append(i),
                n.append(a);
              var s, c;
              i.addEventListener('mousedown', function (n) {
                n.preventDefault(),
                  (c = new Date()),
                  (s = setInterval(function () {
                    t(e, !0);
                  }, 300));
              }),
                o.addEventListener('mousedown', function (n) {
                  n.preventDefault(),
                    (c = new Date()),
                    (s = setInterval(function () {
                      t(e);
                    }, 300));
                }),
                o.addEventListener('mouseup', function () {
                  clearInterval(s);
                }),
                i.addEventListener('mouseup', function () {
                  clearInterval(s);
                }),
                window.addEventListener('mouseup', function () {
                  clearInterval(s);
                }),
                i.addEventListener('click', function () {
                  new Date().getTime() - c.getTime() < 300 && t(e, !0);
                }),
                o.addEventListener('click', function () {
                  new Date().getTime() - c.getTime() < 300 && t(e);
                });
            }
            e.addEventListener('keypress', function (e) {
              (function (e, t) {
                var n = t.which ? t.which : t.keyCode,
                  o = e.value.split('.');
                if (46 !== n && n > 31 && (n < 48 || n > 57)) return !1;
                if (o.length > 1 && 46 === n) return !1;
                var i = r(e),
                  a = e.value.indexOf('.');
                return !(i > a && a > -1 && o[1].length > 1);
              })(e.target, e) || e.preventDefault();
            });
          }
        });
      }),
      (t.refresh = function () {
        e(document.querySelectorAll('.has-step-value')).forEach(function (e) {
          e.parentNode.querySelector('.trigger-wrapper').style.top = e.offsetTop + 'px';
        });
      }),
      t
    );
  })();
  c.defaultSetup();
  var l = (function () {
    function t(e) {
      this._element = e;
    }
    return (
      (t.defaultSetup = function () {
        var t = document.querySelectorAll('.tabs');
        function r(t) {
          t.preventDefault();
          var n = t.currentTarget,
            r = n.parentNode,
            o = r.querySelectorAll('.tab');
          e(o).forEach(function (e) {
            e.classList.remove('active');
          }),
            a(r, n),
            n.classList.add('active'),
            s(n, r.parentNode.parentNode.parentNode);
        }
        function o(e) {
          var t = e.currentTarget,
            n = t.parentNode.querySelector('.tabs'),
            r = 0;
          (r = t.classList.contains('next') ? n.scrollLeft + n.clientWidth : n.scrollLeft - n.clientWidth),
            n.scroll({ left: r, behavior: 'smooth' });
        }
        function i(e, t, n) {
          t.classList.remove('hide'),
            n.classList.remove('hide'),
            e.scrollLeft
              ? e.scrollWidth - e.scrollLeft === e.clientWidth && n.classList.add('hide')
              : t.classList.add('hide');
        }
        function a(e, t, n) {
          var r = 0;
          n ? (r = 500) : (n = e.querySelector('.active-indicator'));
          var o = e.getBoundingClientRect(),
            i = t.getBoundingClientRect(),
            s = i.x - o.x + e.scrollLeft;
          (n.style.width = i.width + 'px'), (n.style.left = s + 'px');
          var c = 0,
            l = 0;
          i.left < o.left
            ? ((c = parseInt(o.left - i.left, 10)), (l = e.scrollLeft - c))
            : i.left + i.width > o.left + o.width &&
              ((c = parseInt(i.left + i.width - (o.left + o.width), 10)), (l = c ? e.scrollLeft + c : 0)),
            c &&
              setTimeout(function () {
                e.scroll({ left: l, behavior: 'smooth' }), r && a(e, t);
              }, r);
        }
        function s(t, n) {
          var r = n.querySelectorAll('.tab-content');
          e(r).forEach(function (e) {
            e.classList.remove('active');
          });
          var o = t.querySelector('a').getAttribute('href');
          o && n.querySelector(o).classList.add('active'), c.refresh();
        }
        e(t).forEach(function (t) {
          var c = t.getElementsByClassName('tab'),
            l = document.createElement('SPAN');
          if (
            (l.setAttribute('class', 'active-indicator'),
            e(c).forEach(function (e) {
              e.addEventListener('click', r),
                e.classList.contains('active') && (a(t, e, l), s(e, t.parentNode.parentNode.parentNode)),
                n(e.firstChild, !1, 'rgba(192, 200, 208, 1)');
            }),
            t.scrollWidth > t.clientWidth)
          ) {
            var d = t.parentNode.parentNode,
              u = document.createElement('BUTTON');
            u.setAttribute('class', 'previous'), (u.innerHTML = '<i class="icon arrow left"></i>'), d.prepend(u);
            var f = document.createElement('BUTTON');
            f.setAttribute('class', 'next'),
              (f.innerHTML = '<i class="icon arrow right"></i>'),
              d.append(f),
              d.classList.add('scrollable'),
              n(u, !0, 'rgba(0, 173, 239, 1)'),
              n(f, !0, 'rgba(0, 173, 239, 1)'),
              u.addEventListener('click', o),
              f.addEventListener('click', o);
            var p = 0;
            t.addEventListener('scroll', function (e) {
              clearInterval(p),
                (p = setTimeout(function () {
                  i(e.target, u, f);
                }, 100));
            }),
              i(t, u, f);
          }
          t.appendChild(l);
        });
      }),
      t
    );
  })();
  l.defaultSetup();
  var d = (function () {
    function r() {}
    return (
      (r.defaultSetup = function () {
        e(document.querySelectorAll('.expansion-panel input')).forEach(function (e) {
          n(e.parentNode),
            'checkbox' === e.type &&
              e.addEventListener('change', function (e) {
                var n = t(e.target);
                e.target.checked ? n.classList.add('open') : n.classList.remove('open');
              });
        });
      }),
      r
    );
  })();
  d.defaultSetup();
  var u = (function () {
      function e() {}
      return (
        (e.show = function (e, t, n) {
          void 0 === t && (t = 'success'), void 0 === n && (n = 6e3);
          var r = document.createElement('DIV'),
            o = document.createElement('P'),
            i = document.createElement('I');
          i.classList.add('icon', 'close'),
            r.classList.add('notification', 'toast'),
            t && r.classList.add(t),
            (o.innerText = e),
            r.append(o),
            r.append(i),
            i.addEventListener('click', function (e) {
              e.target.parentNode.classList.add('hide');
            }),
            r.addEventListener('transitionend', function (e) {
              var t = e.target,
                n = t.parentNode;
              n &&
                t.classList.contains('hide') &&
                (n.removeChild(t),
                n.childNodes.length || n.parentNode.removeChild(n),
                n.childNodes.length > 3 && (n.firstChild.classList.remove('show'), n.firstChild.classList.add('hide')));
            });
          var a = document.getElementById('notification-wrapper');
          if (a) a.append(r), a.childNodes.length > 3 && a.firstChild.classList.add('hide');
          else {
            var s = document.createElement('DIV');
            s.setAttribute('id', 'notification-wrapper'),
              s.classList.add('notification-wrapper'),
              s.append(r),
              document.body.append(s);
          }
          setTimeout(function () {
            r.classList.add('show'), a && a.childNodes.length > 3 && r.classList.add('delay');
          }, 20),
            a &&
              a.childNodes.length > 3 &&
              setTimeout(function () {
                r.classList.remove('delay');
              }, 100),
            setTimeout(function () {
              r.classList.add('hide');
            }, n);
        }),
        e
      );
    })(),
    f = 'undefined' != typeof window && 'undefined' != typeof document && 'undefined' != typeof navigator,
    p = (function () {
      for (var e = ['Edge', 'Trident', 'Firefox'], t = 0; t < e.length; t += 1)
        if (f && navigator.userAgent.indexOf(e[t]) >= 0) return 1;
      return 0;
    })();
  var h =
    f && window.Promise
      ? function (e) {
          var t = !1;
          return function () {
            t ||
              ((t = !0),
              window.Promise.resolve().then(function () {
                (t = !1), e();
              }));
          };
        }
      : function (e) {
          var t = !1;
          return function () {
            t ||
              ((t = !0),
              setTimeout(function () {
                (t = !1), e();
              }, p));
          };
        };
  function m(e) {
    return e && '[object Function]' === {}.toString.call(e);
  }
  function v(e, t) {
    if (1 !== e.nodeType) return [];
    var n = e.ownerDocument.defaultView.getComputedStyle(e, null);
    return t ? n[t] : n;
  }
  function g(e) {
    return 'HTML' === e.nodeName ? e : e.parentNode || e.host;
  }
  function b(e) {
    if (!e) return document.body;
    switch (e.nodeName) {
      case 'HTML':
      case 'BODY':
        return e.ownerDocument.body;
      case '#document':
        return e.body;
    }
    var t = v(e),
      n = t.overflow,
      r = t.overflowX,
      o = t.overflowY;
    return /(auto|scroll|overlay)/.test(n + o + r) ? e : b(g(e));
  }
  function y(e) {
    return e && e.referenceNode ? e.referenceNode : e;
  }
  var w = f && !(!window.MSInputMethodContext || !document.documentMode),
    L = f && /MSIE 10/.test(navigator.userAgent);
  function E(e) {
    return 11 === e ? w : 10 === e ? L : w || L;
  }
  function x(e) {
    if (!e) return document.documentElement;
    for (var t = E(10) ? document.body : null, n = e.offsetParent || null; n === t && e.nextElementSibling; )
      n = (e = e.nextElementSibling).offsetParent;
    var r = n && n.nodeName;
    return r && 'BODY' !== r && 'HTML' !== r
      ? -1 !== ['TH', 'TD', 'TABLE'].indexOf(n.nodeName) && 'static' === v(n, 'position')
        ? x(n)
        : n
      : e
      ? e.ownerDocument.documentElement
      : document.documentElement;
  }
  function N(e) {
    return null !== e.parentNode ? N(e.parentNode) : e;
  }
  function S(e, t) {
    if (!(e && e.nodeType && t && t.nodeType)) return document.documentElement;
    var n = e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING,
      r = n ? e : t,
      o = n ? t : e,
      i = document.createRange();
    i.setStart(r, 0), i.setEnd(o, 0);
    var a,
      s,
      c = i.commonAncestorContainer;
    if ((e !== c && t !== c) || r.contains(o))
      return 'BODY' === (s = (a = c).nodeName) || ('HTML' !== s && x(a.firstElementChild) !== a) ? x(c) : c;
    var l = N(e);
    return l.host ? S(l.host, t) : S(e, N(t).host);
  }
  function k(e) {
    var t =
        'top' === (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'top') ? 'scrollTop' : 'scrollLeft',
      n = e.nodeName;
    if ('BODY' === n || 'HTML' === n) {
      var r = e.ownerDocument.documentElement;
      return (e.ownerDocument.scrollingElement || r)[t];
    }
    return e[t];
  }
  function T(e, t) {
    var n = 'x' === t ? 'Left' : 'Top',
      r = 'Left' === n ? 'Right' : 'Bottom';
    return parseFloat(e['border' + n + 'Width']) + parseFloat(e['border' + r + 'Width']);
  }
  function A(e, t, n, r) {
    return Math.max(
      t['offset' + e],
      t['scroll' + e],
      n['client' + e],
      n['offset' + e],
      n['scroll' + e],
      E(10)
        ? parseInt(n['offset' + e]) +
            parseInt(r['margin' + ('Height' === e ? 'Top' : 'Left')]) +
            parseInt(r['margin' + ('Height' === e ? 'Bottom' : 'Right')])
        : 0,
    );
  }
  function O(e) {
    var t = e.body,
      n = e.documentElement,
      r = E(10) && getComputedStyle(n);
    return { height: A('Height', t, n, r), width: A('Width', t, n, r) };
  }
  var C = function (e, t) {
      if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');
    },
    I = (function () {
      function e(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n];
          (r.enumerable = r.enumerable || !1),
            (r.configurable = !0),
            'value' in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r);
        }
      }
      return function (t, n, r) {
        return n && e(t.prototype, n), r && e(t, r), t;
      };
    })(),
    q = function (e, t, n) {
      return (
        t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : (e[t] = n),
        e
      );
    },
    D =
      Object.assign ||
      function (e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = arguments[t];
          for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
        }
        return e;
      };
  function M(e) {
    return D({}, e, { right: e.left + e.width, bottom: e.top + e.height });
  }
  function P(e) {
    var t = {};
    try {
      if (E(10)) {
        t = e.getBoundingClientRect();
        var n = k(e, 'top'),
          r = k(e, 'left');
        (t.top += n), (t.left += r), (t.bottom += n), (t.right += r);
      } else t = e.getBoundingClientRect();
    } catch (e) {}
    var o = { left: t.left, top: t.top, width: t.right - t.left, height: t.bottom - t.top },
      i = 'HTML' === e.nodeName ? O(e.ownerDocument) : {},
      a = i.width || e.clientWidth || o.width,
      s = i.height || e.clientHeight || o.height,
      c = e.offsetWidth - a,
      l = e.offsetHeight - s;
    if (c || l) {
      var d = v(e);
      (c -= T(d, 'x')), (l -= T(d, 'y')), (o.width -= c), (o.height -= l);
    }
    return M(o);
  }
  function H(e, t) {
    var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
      r = E(10),
      o = 'HTML' === t.nodeName,
      i = P(e),
      a = P(t),
      s = b(e),
      c = v(t),
      l = parseFloat(c.borderTopWidth),
      d = parseFloat(c.borderLeftWidth);
    n && o && ((a.top = Math.max(a.top, 0)), (a.left = Math.max(a.left, 0)));
    var u = M({ top: i.top - a.top - l, left: i.left - a.left - d, width: i.width, height: i.height });
    if (((u.marginTop = 0), (u.marginLeft = 0), !r && o)) {
      var f = parseFloat(c.marginTop),
        p = parseFloat(c.marginLeft);
      (u.top -= l - f),
        (u.bottom -= l - f),
        (u.left -= d - p),
        (u.right -= d - p),
        (u.marginTop = f),
        (u.marginLeft = p);
    }
    return (
      (r && !n ? t.contains(s) : t === s && 'BODY' !== s.nodeName) &&
        (u = (function (e, t) {
          var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            r = k(t, 'top'),
            o = k(t, 'left'),
            i = n ? -1 : 1;
          return (e.top += r * i), (e.bottom += r * i), (e.left += o * i), (e.right += o * i), e;
        })(u, t)),
      u
    );
  }
  function F(e) {
    if (!e || !e.parentElement || E()) return document.documentElement;
    for (var t = e.parentElement; t && 'none' === v(t, 'transform'); ) t = t.parentElement;
    return t || document.documentElement;
  }
  function B(e, t, n, r) {
    var o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
      i = { top: 0, left: 0 },
      a = o ? F(e) : S(e, y(t));
    if ('viewport' === r)
      i = (function (e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          n = e.ownerDocument.documentElement,
          r = H(e, n),
          o = Math.max(n.clientWidth, window.innerWidth || 0),
          i = Math.max(n.clientHeight, window.innerHeight || 0),
          a = t ? 0 : k(n),
          s = t ? 0 : k(n, 'left');
        return M({ top: a - r.top + r.marginTop, left: s - r.left + r.marginLeft, width: o, height: i });
      })(a, o);
    else {
      var s = void 0;
      'scrollParent' === r
        ? 'BODY' === (s = b(g(t))).nodeName && (s = e.ownerDocument.documentElement)
        : (s = 'window' === r ? e.ownerDocument.documentElement : r);
      var c = H(s, a, o);
      if (
        'HTML' !== s.nodeName ||
        (function e(t) {
          var n = t.nodeName;
          if ('BODY' === n || 'HTML' === n) return !1;
          if ('fixed' === v(t, 'position')) return !0;
          var r = g(t);
          return !!r && e(r);
        })(a)
      )
        i = c;
      else {
        var l = O(e.ownerDocument),
          d = l.height,
          u = l.width;
        (i.top += c.top - c.marginTop),
          (i.bottom = d + c.top),
          (i.left += c.left - c.marginLeft),
          (i.right = u + c.left);
      }
    }
    var f = 'number' == typeof (n = n || 0);
    return (
      (i.left += f ? n : n.left || 0),
      (i.top += f ? n : n.top || 0),
      (i.right -= f ? n : n.right || 0),
      (i.bottom -= f ? n : n.bottom || 0),
      i
    );
  }
  function W(e, t, n, r, o) {
    var i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0;
    if (-1 === e.indexOf('auto')) return e;
    var a = B(n, r, i, o),
      s = {
        top: { width: a.width, height: t.top - a.top },
        right: { width: a.right - t.right, height: a.height },
        bottom: { width: a.width, height: a.bottom - t.bottom },
        left: { width: t.left - a.left, height: a.height },
      },
      c = Object.keys(s)
        .map(function (e) {
          return D({ key: e }, s[e], { area: ((t = s[e]), t.width * t.height) });
          var t;
        })
        .sort(function (e, t) {
          return t.area - e.area;
        }),
      l = c.filter(function (e) {
        var t = e.width,
          r = e.height;
        return t >= n.clientWidth && r >= n.clientHeight;
      }),
      d = l.length > 0 ? l[0].key : c[0].key,
      u = e.split('-')[1];
    return d + (u ? '-' + u : '');
  }
  function R(e, t, n) {
    var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
    return H(n, r ? F(t) : S(t, y(n)), r);
  }
  function V(e) {
    var t = e.ownerDocument.defaultView.getComputedStyle(e),
      n = parseFloat(t.marginTop || 0) + parseFloat(t.marginBottom || 0),
      r = parseFloat(t.marginLeft || 0) + parseFloat(t.marginRight || 0);
    return { width: e.offsetWidth + r, height: e.offsetHeight + n };
  }
  function U(e) {
    var t = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
    return e.replace(/left|right|bottom|top/g, function (e) {
      return t[e];
    });
  }
  function _(e, t, n) {
    n = n.split('-')[0];
    var r = V(e),
      o = { width: r.width, height: r.height },
      i = -1 !== ['right', 'left'].indexOf(n),
      a = i ? 'top' : 'left',
      s = i ? 'left' : 'top',
      c = i ? 'height' : 'width',
      l = i ? 'width' : 'height';
    return (o[a] = t[a] + t[c] / 2 - r[c] / 2), (o[s] = n === s ? t[s] - r[l] : t[U(s)]), o;
  }
  function j(e, t) {
    return Array.prototype.find ? e.find(t) : e.filter(t)[0];
  }
  function Y(e, t, n) {
    return (
      (void 0 === n
        ? e
        : e.slice(
            0,
            (function (e, t, n) {
              if (Array.prototype.findIndex)
                return e.findIndex(function (e) {
                  return e[t] === n;
                });
              var r = j(e, function (e) {
                return e[t] === n;
              });
              return e.indexOf(r);
            })(e, 'name', n),
          )
      ).forEach(function (e) {
        e.function && console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
        var n = e.function || e.fn;
        e.enabled &&
          m(n) &&
          ((t.offsets.popper = M(t.offsets.popper)), (t.offsets.reference = M(t.offsets.reference)), (t = n(t, e)));
      }),
      t
    );
  }
  function K(e, t) {
    return e.some(function (e) {
      var n = e.name;
      return e.enabled && n === t;
    });
  }
  function z(e) {
    for (
      var t = [!1, 'ms', 'Webkit', 'Moz', 'O'], n = e.charAt(0).toUpperCase() + e.slice(1), r = 0;
      r < t.length;
      r++
    ) {
      var o = t[r],
        i = o ? '' + o + n : e;
      if ('undefined' != typeof document.body.style[i]) return i;
    }
    return null;
  }
  function G(e) {
    var t = e.ownerDocument;
    return t ? t.defaultView : window;
  }
  function X(e, t, n, r) {
    (n.updateBound = r), G(e).addEventListener('resize', n.updateBound, { passive: !0 });
    var o = b(e);
    return (
      (function e(t, n, r, o) {
        var i = 'BODY' === t.nodeName,
          a = i ? t.ownerDocument.defaultView : t;
        a.addEventListener(n, r, { passive: !0 }), i || e(b(a.parentNode), n, r, o), o.push(a);
      })(o, 'scroll', n.updateBound, n.scrollParents),
      (n.scrollElement = o),
      (n.eventsEnabled = !0),
      n
    );
  }
  function J() {
    var e, t;
    this.state.eventsEnabled &&
      (cancelAnimationFrame(this.scheduleUpdate),
      (this.state =
        ((e = this.reference),
        (t = this.state),
        G(e).removeEventListener('resize', t.updateBound),
        t.scrollParents.forEach(function (e) {
          e.removeEventListener('scroll', t.updateBound);
        }),
        (t.updateBound = null),
        (t.scrollParents = []),
        (t.scrollElement = null),
        (t.eventsEnabled = !1),
        t)));
  }
  function Q(e) {
    return '' !== e && !isNaN(parseFloat(e)) && isFinite(e);
  }
  function Z(e, t) {
    Object.keys(t).forEach(function (n) {
      var r = '';
      -1 !== ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(n) && Q(t[n]) && (r = 'px'),
        (e.style[n] = t[n] + r);
    });
  }
  var $ = f && /Firefox/i.test(navigator.userAgent);
  function ee(e, t, n) {
    var r = j(e, function (e) {
        return e.name === t;
      }),
      o =
        !!r &&
        e.some(function (e) {
          return e.name === n && e.enabled && e.order < r.order;
        });
    if (!o) {
      var i = '`' + t + '`',
        a = '`' + n + '`';
      console.warn(
        a + ' modifier is required by ' + i + ' modifier in order to work, be sure to include it before ' + i + '!',
      );
    }
    return o;
  }
  var te = [
      'auto-start',
      'auto',
      'auto-end',
      'top-start',
      'top',
      'top-end',
      'right-start',
      'right',
      'right-end',
      'bottom-end',
      'bottom',
      'bottom-start',
      'left-end',
      'left',
      'left-start',
    ],
    ne = te.slice(3);
  function re(e) {
    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
      n = ne.indexOf(e),
      r = ne.slice(n + 1).concat(ne.slice(0, n));
    return t ? r.reverse() : r;
  }
  var oe = { FLIP: 'flip', CLOCKWISE: 'clockwise', COUNTERCLOCKWISE: 'counterclockwise' };
  function ie(e, t, n, r) {
    var o = [0, 0],
      i = -1 !== ['right', 'left'].indexOf(r),
      a = e.split(/(\+|\-)/).map(function (e) {
        return e.trim();
      }),
      s = a.indexOf(
        j(a, function (e) {
          return -1 !== e.search(/,|\s/);
        }),
      );
    a[s] &&
      -1 === a[s].indexOf(',') &&
      console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
    var c = /\s*,\s*|\s+/,
      l = -1 !== s ? [a.slice(0, s).concat([a[s].split(c)[0]]), [a[s].split(c)[1]].concat(a.slice(s + 1))] : [a];
    return (
      (l = l.map(function (e, r) {
        var o = (1 === r ? !i : i) ? 'height' : 'width',
          a = !1;
        return e
          .reduce(function (e, t) {
            return '' === e[e.length - 1] && -1 !== ['+', '-'].indexOf(t)
              ? ((e[e.length - 1] = t), (a = !0), e)
              : a
              ? ((e[e.length - 1] += t), (a = !1), e)
              : e.concat(t);
          }, [])
          .map(function (e) {
            return (function (e, t, n, r) {
              var o = e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),
                i = +o[1],
                a = o[2];
              if (!i) return e;
              if (0 === a.indexOf('%')) {
                var s = void 0;
                switch (a) {
                  case '%p':
                    s = n;
                    break;
                  case '%':
                  case '%r':
                  default:
                    s = r;
                }
                return (M(s)[t] / 100) * i;
              }
              if ('vh' === a || 'vw' === a)
                return (
                  (('vh' === a
                    ? Math.max(document.documentElement.clientHeight, window.innerHeight || 0)
                    : Math.max(document.documentElement.clientWidth, window.innerWidth || 0)) /
                    100) *
                  i
                );
              return i;
            })(e, o, t, n);
          });
      })).forEach(function (e, t) {
        e.forEach(function (n, r) {
          Q(n) && (o[t] += n * ('-' === e[r - 1] ? -1 : 1));
        });
      }),
      o
    );
  }
  var ae = {
      placement: 'bottom',
      positionFixed: !1,
      eventsEnabled: !0,
      removeOnDestroy: !1,
      onCreate: function () {},
      onUpdate: function () {},
      modifiers: {
        shift: {
          order: 100,
          enabled: !0,
          fn: function (e) {
            var t = e.placement,
              n = t.split('-')[0],
              r = t.split('-')[1];
            if (r) {
              var o = e.offsets,
                i = o.reference,
                a = o.popper,
                s = -1 !== ['bottom', 'top'].indexOf(n),
                c = s ? 'left' : 'top',
                l = s ? 'width' : 'height',
                d = { start: q({}, c, i[c]), end: q({}, c, i[c] + i[l] - a[l]) };
              e.offsets.popper = D({}, a, d[r]);
            }
            return e;
          },
        },
        offset: {
          order: 200,
          enabled: !0,
          fn: function (e, t) {
            var n = t.offset,
              r = e.placement,
              o = e.offsets,
              i = o.popper,
              a = o.reference,
              s = r.split('-')[0],
              c = void 0;
            return (
              (c = Q(+n) ? [+n, 0] : ie(n, i, a, s)),
              'left' === s
                ? ((i.top += c[0]), (i.left -= c[1]))
                : 'right' === s
                ? ((i.top += c[0]), (i.left += c[1]))
                : 'top' === s
                ? ((i.left += c[0]), (i.top -= c[1]))
                : 'bottom' === s && ((i.left += c[0]), (i.top += c[1])),
              (e.popper = i),
              e
            );
          },
          offset: 0,
        },
        preventOverflow: {
          order: 300,
          enabled: !0,
          fn: function (e, t) {
            var n = t.boundariesElement || x(e.instance.popper);
            e.instance.reference === n && (n = x(n));
            var r = z('transform'),
              o = e.instance.popper.style,
              i = o.top,
              a = o.left,
              s = o[r];
            (o.top = ''), (o.left = ''), (o[r] = '');
            var c = B(e.instance.popper, e.instance.reference, t.padding, n, e.positionFixed);
            (o.top = i), (o.left = a), (o[r] = s), (t.boundaries = c);
            var l = t.priority,
              d = e.offsets.popper,
              u = {
                primary: function (e) {
                  var n = d[e];
                  return d[e] < c[e] && !t.escapeWithReference && (n = Math.max(d[e], c[e])), q({}, e, n);
                },
                secondary: function (e) {
                  var n = 'right' === e ? 'left' : 'top',
                    r = d[n];
                  return (
                    d[e] > c[e] &&
                      !t.escapeWithReference &&
                      (r = Math.min(d[n], c[e] - ('right' === e ? d.width : d.height))),
                    q({}, n, r)
                  );
                },
              };
            return (
              l.forEach(function (e) {
                var t = -1 !== ['left', 'top'].indexOf(e) ? 'primary' : 'secondary';
                d = D({}, d, u[t](e));
              }),
              (e.offsets.popper = d),
              e
            );
          },
          priority: ['left', 'right', 'top', 'bottom'],
          padding: 5,
          boundariesElement: 'scrollParent',
        },
        keepTogether: {
          order: 400,
          enabled: !0,
          fn: function (e) {
            var t = e.offsets,
              n = t.popper,
              r = t.reference,
              o = e.placement.split('-')[0],
              i = Math.floor,
              a = -1 !== ['top', 'bottom'].indexOf(o),
              s = a ? 'right' : 'bottom',
              c = a ? 'left' : 'top',
              l = a ? 'width' : 'height';
            return (
              n[s] < i(r[c]) && (e.offsets.popper[c] = i(r[c]) - n[l]),
              n[c] > i(r[s]) && (e.offsets.popper[c] = i(r[s])),
              e
            );
          },
        },
        arrow: {
          order: 500,
          enabled: !0,
          fn: function (e, t) {
            var n;
            if (!ee(e.instance.modifiers, 'arrow', 'keepTogether')) return e;
            var r = t.element;
            if ('string' == typeof r) {
              if (!(r = e.instance.popper.querySelector(r))) return e;
            } else if (!e.instance.popper.contains(r))
              return console.warn('WARNING: `arrow.element` must be child of its popper element!'), e;
            var o = e.placement.split('-')[0],
              i = e.offsets,
              a = i.popper,
              s = i.reference,
              c = -1 !== ['left', 'right'].indexOf(o),
              l = c ? 'height' : 'width',
              d = c ? 'Top' : 'Left',
              u = d.toLowerCase(),
              f = c ? 'left' : 'top',
              p = c ? 'bottom' : 'right',
              h = V(r)[l];
            s[p] - h < a[u] && (e.offsets.popper[u] -= a[u] - (s[p] - h)),
              s[u] + h > a[p] && (e.offsets.popper[u] += s[u] + h - a[p]),
              (e.offsets.popper = M(e.offsets.popper));
            var m = s[u] + s[l] / 2 - h / 2,
              g = v(e.instance.popper),
              b = parseFloat(g['margin' + d]),
              y = parseFloat(g['border' + d + 'Width']),
              w = m - e.offsets.popper[u] - b - y;
            return (
              (w = Math.max(Math.min(a[l] - h, w), 0)),
              (e.arrowElement = r),
              (e.offsets.arrow = (q((n = {}), u, Math.round(w)), q(n, f, ''), n)),
              e
            );
          },
          element: '[x-arrow]',
        },
        flip: {
          order: 600,
          enabled: !0,
          fn: function (e, t) {
            if (K(e.instance.modifiers, 'inner')) return e;
            if (e.flipped && e.placement === e.originalPlacement) return e;
            var n = B(e.instance.popper, e.instance.reference, t.padding, t.boundariesElement, e.positionFixed),
              r = e.placement.split('-')[0],
              o = U(r),
              i = e.placement.split('-')[1] || '',
              a = [];
            switch (t.behavior) {
              case oe.FLIP:
                a = [r, o];
                break;
              case oe.CLOCKWISE:
                a = re(r);
                break;
              case oe.COUNTERCLOCKWISE:
                a = re(r, !0);
                break;
              default:
                a = t.behavior;
            }
            return (
              a.forEach(function (s, c) {
                if (r !== s || a.length === c + 1) return e;
                (r = e.placement.split('-')[0]), (o = U(r));
                var l = e.offsets.popper,
                  d = e.offsets.reference,
                  u = Math.floor,
                  f =
                    ('left' === r && u(l.right) > u(d.left)) ||
                    ('right' === r && u(l.left) < u(d.right)) ||
                    ('top' === r && u(l.bottom) > u(d.top)) ||
                    ('bottom' === r && u(l.top) < u(d.bottom)),
                  p = u(l.left) < u(n.left),
                  h = u(l.right) > u(n.right),
                  m = u(l.top) < u(n.top),
                  v = u(l.bottom) > u(n.bottom),
                  g = ('left' === r && p) || ('right' === r && h) || ('top' === r && m) || ('bottom' === r && v),
                  b = -1 !== ['top', 'bottom'].indexOf(r),
                  y =
                    !!t.flipVariations &&
                    ((b && 'start' === i && p) ||
                      (b && 'end' === i && h) ||
                      (!b && 'start' === i && m) ||
                      (!b && 'end' === i && v)),
                  w =
                    !!t.flipVariationsByContent &&
                    ((b && 'start' === i && h) ||
                      (b && 'end' === i && p) ||
                      (!b && 'start' === i && v) ||
                      (!b && 'end' === i && m)),
                  L = y || w;
                (f || g || L) &&
                  ((e.flipped = !0),
                  (f || g) && (r = a[c + 1]),
                  L &&
                    (i = (function (e) {
                      return 'end' === e ? 'start' : 'start' === e ? 'end' : e;
                    })(i)),
                  (e.placement = r + (i ? '-' + i : '')),
                  (e.offsets.popper = D({}, e.offsets.popper, _(e.instance.popper, e.offsets.reference, e.placement))),
                  (e = Y(e.instance.modifiers, e, 'flip')));
              }),
              e
            );
          },
          behavior: 'flip',
          padding: 5,
          boundariesElement: 'viewport',
          flipVariations: !1,
          flipVariationsByContent: !1,
        },
        inner: {
          order: 700,
          enabled: !1,
          fn: function (e) {
            var t = e.placement,
              n = t.split('-')[0],
              r = e.offsets,
              o = r.popper,
              i = r.reference,
              a = -1 !== ['left', 'right'].indexOf(n),
              s = -1 === ['top', 'left'].indexOf(n);
            return (
              (o[a ? 'left' : 'top'] = i[n] - (s ? o[a ? 'width' : 'height'] : 0)),
              (e.placement = U(t)),
              (e.offsets.popper = M(o)),
              e
            );
          },
        },
        hide: {
          order: 800,
          enabled: !0,
          fn: function (e) {
            if (!ee(e.instance.modifiers, 'hide', 'preventOverflow')) return e;
            var t = e.offsets.reference,
              n = j(e.instance.modifiers, function (e) {
                return 'preventOverflow' === e.name;
              }).boundaries;
            if (t.bottom < n.top || t.left > n.right || t.top > n.bottom || t.right < n.left) {
              if (!0 === e.hide) return e;
              (e.hide = !0), (e.attributes['x-out-of-boundaries'] = '');
            } else {
              if (!1 === e.hide) return e;
              (e.hide = !1), (e.attributes['x-out-of-boundaries'] = !1);
            }
            return e;
          },
        },
        computeStyle: {
          order: 850,
          enabled: !0,
          fn: function (e, t) {
            var n = t.x,
              r = t.y,
              o = e.offsets.popper,
              i = j(e.instance.modifiers, function (e) {
                return 'applyStyle' === e.name;
              }).gpuAcceleration;
            void 0 !== i &&
              console.warn(
                'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!',
              );
            var a = void 0 !== i ? i : t.gpuAcceleration,
              s = x(e.instance.popper),
              c = P(s),
              l = { position: o.position },
              d = (function (e, t) {
                var n = e.offsets,
                  r = n.popper,
                  o = n.reference,
                  i = Math.round,
                  a = Math.floor,
                  s = function (e) {
                    return e;
                  },
                  c = i(o.width),
                  l = i(r.width),
                  d = -1 !== ['left', 'right'].indexOf(e.placement),
                  u = -1 !== e.placement.indexOf('-'),
                  f = t ? (d || u || c % 2 == l % 2 ? i : a) : s,
                  p = t ? i : s;
                return {
                  left: f(c % 2 == 1 && l % 2 == 1 && !u && t ? r.left - 1 : r.left),
                  top: p(r.top),
                  bottom: p(r.bottom),
                  right: f(r.right),
                };
              })(e, window.devicePixelRatio < 2 || !$),
              u = 'bottom' === n ? 'top' : 'bottom',
              f = 'right' === r ? 'left' : 'right',
              p = z('transform'),
              h = void 0,
              m = void 0;
            if (
              ((m =
                'bottom' === u ? ('HTML' === s.nodeName ? -s.clientHeight + d.bottom : -c.height + d.bottom) : d.top),
              (h = 'right' === f ? ('HTML' === s.nodeName ? -s.clientWidth + d.right : -c.width + d.right) : d.left),
              a && p)
            )
              (l[p] = 'translate3d(' + h + 'px, ' + m + 'px, 0)'), (l[u] = 0), (l[f] = 0), (l.willChange = 'transform');
            else {
              var v = 'bottom' === u ? -1 : 1,
                g = 'right' === f ? -1 : 1;
              (l[u] = m * v), (l[f] = h * g), (l.willChange = u + ', ' + f);
            }
            var b = { 'x-placement': e.placement };
            return (
              (e.attributes = D({}, b, e.attributes)),
              (e.styles = D({}, l, e.styles)),
              (e.arrowStyles = D({}, e.offsets.arrow, e.arrowStyles)),
              e
            );
          },
          gpuAcceleration: !0,
          x: 'bottom',
          y: 'right',
        },
        applyStyle: {
          order: 900,
          enabled: !0,
          fn: function (e) {
            var t, n;
            return (
              Z(e.instance.popper, e.styles),
              (t = e.instance.popper),
              (n = e.attributes),
              Object.keys(n).forEach(function (e) {
                !1 !== n[e] ? t.setAttribute(e, n[e]) : t.removeAttribute(e);
              }),
              e.arrowElement && Object.keys(e.arrowStyles).length && Z(e.arrowElement, e.arrowStyles),
              e
            );
          },
          onLoad: function (e, t, n, r, o) {
            var i = R(o, t, e, n.positionFixed),
              a = W(n.placement, i, t, e, n.modifiers.flip.boundariesElement, n.modifiers.flip.padding);
            return t.setAttribute('x-placement', a), Z(t, { position: n.positionFixed ? 'fixed' : 'absolute' }), n;
          },
          gpuAcceleration: void 0,
        },
      },
    },
    se = (function () {
      function e(t, n) {
        var r = this,
          o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        C(this, e),
          (this.scheduleUpdate = function () {
            return requestAnimationFrame(r.update);
          }),
          (this.update = h(this.update.bind(this))),
          (this.options = D({}, e.Defaults, o)),
          (this.state = { isDestroyed: !1, isCreated: !1, scrollParents: [] }),
          (this.reference = t && t.jquery ? t[0] : t),
          (this.popper = n && n.jquery ? n[0] : n),
          (this.options.modifiers = {}),
          Object.keys(D({}, e.Defaults.modifiers, o.modifiers)).forEach(function (t) {
            r.options.modifiers[t] = D({}, e.Defaults.modifiers[t] || {}, o.modifiers ? o.modifiers[t] : {});
          }),
          (this.modifiers = Object.keys(this.options.modifiers)
            .map(function (e) {
              return D({ name: e }, r.options.modifiers[e]);
            })
            .sort(function (e, t) {
              return e.order - t.order;
            })),
          this.modifiers.forEach(function (e) {
            e.enabled && m(e.onLoad) && e.onLoad(r.reference, r.popper, r.options, e, r.state);
          }),
          this.update();
        var i = this.options.eventsEnabled;
        i && this.enableEventListeners(), (this.state.eventsEnabled = i);
      }
      return (
        I(e, [
          {
            key: 'update',
            value: function () {
              return function () {
                if (!this.state.isDestroyed) {
                  var e = { instance: this, styles: {}, arrowStyles: {}, attributes: {}, flipped: !1, offsets: {} };
                  (e.offsets.reference = R(this.state, this.popper, this.reference, this.options.positionFixed)),
                    (e.placement = W(
                      this.options.placement,
                      e.offsets.reference,
                      this.popper,
                      this.reference,
                      this.options.modifiers.flip.boundariesElement,
                      this.options.modifiers.flip.padding,
                    )),
                    (e.originalPlacement = e.placement),
                    (e.positionFixed = this.options.positionFixed),
                    (e.offsets.popper = _(this.popper, e.offsets.reference, e.placement)),
                    (e.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'),
                    (e = Y(this.modifiers, e)),
                    this.state.isCreated
                      ? this.options.onUpdate(e)
                      : ((this.state.isCreated = !0), this.options.onCreate(e));
                }
              }.call(this);
            },
          },
          {
            key: 'destroy',
            value: function () {
              return function () {
                return (
                  (this.state.isDestroyed = !0),
                  K(this.modifiers, 'applyStyle') &&
                    (this.popper.removeAttribute('x-placement'),
                    (this.popper.style.position = ''),
                    (this.popper.style.top = ''),
                    (this.popper.style.left = ''),
                    (this.popper.style.right = ''),
                    (this.popper.style.bottom = ''),
                    (this.popper.style.willChange = ''),
                    (this.popper.style[z('transform')] = '')),
                  this.disableEventListeners(),
                  this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper),
                  this
                );
              }.call(this);
            },
          },
          {
            key: 'enableEventListeners',
            value: function () {
              return function () {
                this.state.eventsEnabled ||
                  (this.state = X(this.reference, this.options, this.state, this.scheduleUpdate));
              }.call(this);
            },
          },
          {
            key: 'disableEventListeners',
            value: function () {
              return J.call(this);
            },
          },
        ]),
        e
      );
    })();
  (se.Utils = ('undefined' != typeof window ? window : global).PopperUtils), (se.placements = te), (se.Defaults = ae);
  var ce = (function () {
    function t() {}
    return (
      (t.defaultSetup = function () {
        e(document.querySelectorAll('[tooltip-data]')).forEach(function (e) {
          var t = null;
          e.addEventListener('mouseover', function () {
            var n = e.getAttribute('tooltip-data'),
              r = document.createElement('DIV');
            r.classList.add('tooltip'),
              (r.innerText = n),
              document.body.append(r),
              setTimeout(function () {
                r.classList.add('show');
              }, 20),
              (t = new se(e, r, { placement: 'top' }));
          }),
            e.addEventListener('mouseout', function () {
              var e = document.querySelector('.tooltip');
              e.parentNode.removeChild(e), t.destroy();
            });
        });
      }),
      t
    );
  })();
  ce.defaultSetup();
  return {
    Navigation: o,
    Button: i,
    Select: a,
    SelectionControl: s,
    ExpansionPanel: d,
    Tabs: l,
    InputFields: c,
    Notification: u,
    Tooltip: ce,
    ProgressIndicator: (function () {
      function e(e) {
        (this._element = e), this.setupProgressRing();
      }
      var t = e.prototype;
      return (
        (t.setupProgressRing = function () {
          this._element.innerHTML =
            '<svg class="progress-ring"><circle class="progress-ring-circle" r="22.5" cx="25" cy="25" /></svg>';
        }),
        (t.setProgress = function (e) {
          var t = this._element.querySelector('circle'),
            n = 2 * t.r.baseVal.value * Math.PI;
          t.style.strokeDasharray = n + ' ' + n;
          var r = n - (e / 100) * n;
          t.style.strokeDashoffset = r;
        }),
        (e.show = function (e) {
          console.log(document.body.querySelector('.progress-block-wrapper'));
          var t = document.body.querySelector('.progress-block-wrapper') || document.createElement('DIV');
          t.innerHTML = '';
          var n = document.createElement('DIV');
          t.classList.add('progress-block-wrapper'),
            n.classList.add('progress'),
            (this._element = n),
            e
              ? (n.classList.add('determinite'),
                (this.determiniteProgress = new this(n)),
                this.determiniteProgress.setProgress(e))
              : n.classList.add('infinite'),
            t.append(n),
            document.body.append(t);
        }),
        (e.setProgress = function (e) {
          this.determiniteProgress && this.determiniteProgress.setProgress(e);
        }),
        (e.hide = function () {
          var e = this._element ? this._element.parentNode : document.body.querySelector('.progress-block-wrapper');
          e && e.classList.contains('progress-block-wrapper') && e.parentNode.removeChild(e);
        }),
        e
      );
    })(),
  };
});
//# sourceMappingURL=uilab.bundle.min.js.map
