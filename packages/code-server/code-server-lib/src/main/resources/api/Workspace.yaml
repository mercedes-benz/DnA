# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
#
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : Workspace.yaml
#  **
#  ** Module     : core
#  ** 

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  boonbaluri
#
#  Bug Number         :  
#  Changed By         :  
#  Change Description :  
#  Change On          :  
#  Search String      :  
#  
#  -------------------------------------------------------------------------------------------------------


swagger: "2.0"
info:
  version: "1.0.0"
  title: "Code-server Workspace Service"
host: "localhost:7979"
basePath: "/api/1.0"
consumes:
  - "application/json"
produces:
  - "application/json"
tags:
  - name: "code-server"
    description: "This service is used to maintain code-server workspaces information."

schemes:
  - "https"

paths:

  # Fetch all valid userinfo or by intent
  #
  #  supported http methods GET, POST
  #
  # path example ../workspaces

  /workspaces:
    get:
      tags:
        - "code-server"
      summary: "Get all codeServer workspaces for the user."
      description:  "Get all codeServer workspaces for the user."
      operationId: "getAll"
      parameters:
          - name: offset
            in: query
            description: page number from which listing of workspaces should start. Offset. Example 2
            required: false
            type: integer
          - name: limit
            in: query
            description: page size to limit the number of workspaces, Example 15
            required: false
            type: integer
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/WorkspaceCollectionVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
          
    post:
      tags:
        - "code-server"
      summary: "Initialize/Create Workbench for user in code-server."
      description: "Create workspace for user in code-server with given password"
      operationId: "createWorkspace"
      parameters:
        - name: "codeServerRequestVO"
          in: "body"
          description: "Request Body that contains data required for intialize code server workbench for user"
          required: true
          schema:
            $ref: "#/definitions/InitializeWorkspaceRequestVO"
      responses:
        201:
          description: "Returns message of success or failure "
          schema:
            $ref: "#/definitions/InitializeWorkspaceResponseVO"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
    

  # Fetch all valid userinfo or by intent
  #
  #  supported http methods GET, POST and DELETE
  #
  # path example ../workspaces/{id}

  /workspaces/{id}/{userId}:
    put:
      tags:
        - "code-server"
      summary: "Initialize Workbench for user by admin."
      description: "Initialize workbench for collab user by admin"
      operationId: "InitializeWorkspaceByAdmin"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "userId"
          in: "path"
          description: "user ID to be fetched"
          required: true
          type: "string"
        - name: "initializeCollabWSRequestVO"
          in: "body"
          description: "Request Body that contains data required for intialize code server workbench for user"
          required: true
          schema:
            $ref: "#/definitions/InitializeCollabWorkspaceRequestVO"
      responses:
        201:
          description: "Returns message of success or failure "
          schema:
            $ref: "#/definitions/InitializeWorkspaceResponseVO"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/{id}:
    get:
      tags:
        - "code-server"
      summary: "Get workspace details for a given Id."
      description: "Get workspace details for a given Id."
      operationId: "getById"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/CodeServerWorkspaceVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
    
    put:
      tags:
        - "code-server"
      summary: "Initialize Workbench for user."
      description: "Initialize workbench for collab user"
      operationId: "InitializeWorkspace"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "initializeCollabWSRequestVO"
          in: "body"
          description: "Request Body that contains data required for intialize code server workbench for user"
          required: true
          schema:
            $ref: "#/definitions/InitializeCollabWorkspaceRequestVO"
      responses:
        201:
          description: "Returns message of success or failure "
          schema:
            $ref: "#/definitions/InitializeWorkspaceResponseVO"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
                
    delete:
      tags:
        - "code-server"
      summary: "Delete workspace for a given Id."
      description: "Delete workspace for a given identifier."
      operationId: "deleteWorkspace"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be deleted"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

    patch:
      tags:
        - "code-server"
      summary: "update resource for give workspace id."
      description: "updating resource for existing workspace Project "
      operationId: "updateResourceValue"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "updatedResourceValue"
          in: "body"
          description: "resources to add codespace"
          required: true
          schema:
           $ref: "#/definitions/ResourceVO"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
          
  /workspaces/server/{id}: 
    delete:
      tags:
        - "code-server"
      summary: "Stop server of workspace for a given Id."
      description: "Selete the server for workspace for a given identifier."
      operationId: "StopServer"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID of server to be deleted"
          required: true
          type: "string"
        - name: "cloudServiceProvider"
          in: query
          description: cloudServiceProvider variable to select the target provider to stop
          required: true
          type: string
          enum:
          - DHC-CaaS
          - DHC-CaaS-AWS
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/{id}/{userid}/validate:
    get:
      tags:
        - "code-server"
      summary: "To check given user has a access to workspace or not."
      description: "To check a user has access to workspace."
      operationId: "validateCodespace"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be validated"
          required: true
          type: "string"
        - name: "userid"
          in: "path"
          description: "User ID to be deleted"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/CodeServerWorkspaceValidateVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
 
  /workspaces/{id}/readme:
    get:
      tags:
        - "code-server"
      summary: "Get how to use codespace instructions from Readme file in git"
      description: "Get how to use codespace instructions from Readme file in git "
      operationId: "getReadme"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns readme file from the repo of the codespace"
          schema:
            $ref: "#/definitions/CodeSpaceReadmeVo"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
      
  /workspaces/{id}/collaborator:        
    post:
      tags:
        - "code-server"
      summary: "Add collaborator to existing workspace Project for a given Id."
      description: "Add collaborator to existing workspace Project "
      operationId: "addCollab"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "userRequestDto"
          in: "body"
          description: "Userinfo to add collaborator to project"
          required: true
          schema:
            $ref: "#/definitions/UserInfoVO"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/{id}/datagovernance:        
    patch:
      tags:
        - "code-server"
      summary: "Add governance to existing workspace Project for a given Id."
      description: "Add governance to existing workspace Project "
      operationId: "updateGovernance"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "dataGovernanceInfo"
          in: "body"
          description: "dataGovernanceInfo to add codespace"
          required: true
          schema:
           $ref: "#/definitions/DataGovernanceRequestInfo"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"


  /workspaces/{id}/collaborator/{userid}:
    delete:
      tags:
        - "code-server"
      summary: "remove collaborator from workspace project for a given Id."
      description: "remove collaborator from workspace project for a given identifier."
      operationId: "removeCollab"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "userid"
          in: "path"
          description: "User ID to be deleted"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/{id}/projectowner:
    patch:
      tags:
        - "code-server"
      summary: "reassign owner from existing collaborator list for a given user Id."
      description: "reassign owner from existing collaborator list for a given user Id."
      operationId: "reassignOwner"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "UserIdDto"
          in: "body"
          description: "UserId to add collaborator as Owner"
          required: true
          schema:
            $ref: "#/definitions/UserIdVO"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/{id}/deploy:        
    post:
      tags:
        - "code-server"
      summary: "Deploy workspace Project for a given Id."
      description: "deploy workspace Project for a given identifier."
      operationId: "deployWorkspaceProject"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "deployRequestDto"
          in: "body"
          description: "request body for the project to be deployed"
          required: true
          schema:
            $ref: "#/definitions/ManageDeployRequestDto"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
          
    delete:
      tags:
        - "code-server"
      summary: "undeploy workspace project for a given Id."
      description: "undeploy workspace project for a given identifier."
      operationId: "undeployWorkspaceProject"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "deployRequestDto"
          in: "body"
          description: "Workspace ID for the project to be deployed"
          required: true
          schema:
            $ref: "#/definitions/ManageDeployRequestDto"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"


  /workspaces/{id}/config:        
    patch:
      tags:
        - "code-server"
      summary: "Save Codespace security configurations which include defining roles, entitlements, user-role mappings etc."
      description: "Save Codespace security configurations"
      operationId: "saveSecurityConfig"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "configRequestDto"
          in: "body"
          description: "request body for saving security config details of the project"
          required: true
          schema:
            $ref: "#/definitions/SecurityConfigRequestDto"
        - name: env
          in: query
          description: environment variable to select the target environment
          required: true
          type: string
          enum:
          - int
          - prod
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/SecurityConfigResponseDto"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
        
    get:
      tags:
        - "code-server"
      summary: "Get Security config for the worksapce Id."
      description: "Get Security config for the worksapce Id."
      operationId: "getSecurityConfig"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace name to be fetched"
          required: true
          type: "string"
        - name: env
          in: query
          description: environment variable to select the target environment
          required: true
          type: string
          enum:
          - int
          - prod
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/CodespaceSecurityConfigDetailVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"


  # /workspaces/{id}/config/request:        
  #   post:
  #     tags:
  #       - "code-server"
  #     summary: "Request for the changes to be added in access management system"
  #     description: "request Codespace security configurations to be published"
  #     operationId: "requestSecurityConfig"
  #     parameters:
  #       - name: "id"
  #         in: "path"
  #         description: "Workspace ID to be fetched"
  #         required: true
  #         type: "string"
  #     responses:
  #       201:
  #         description: "Returns message of success or failure"
  #         schema:
  #           $ref: "#/definitions/GenericMessage"
  #       204:
  #         description: "Fetch complete, no content found."
  #       400:
  #         description: "Bad request."
  #       401:
  #         description: "Request does not have sufficient credentials."
  #       403:
  #         description: "Request is not authorized."
  #       405:
  #         description: "Method not allowed"
  #       500:
  #         description: "Internal error"
                      
  # Fetch all valid userinfo or by intent
  #
  #  supported http methods GET, PUT
  #
  # path example ../workspaces/status/{name}

  /workspaces/status/{name}/:
    get:
      tags:
        - "code-server"
      summary: "Get workspace details for a given Id."
      description: "Get workspace details for a given Id."
      operationId: "getByName"
      parameters:
        - name: "name"
          in: "path"
          description: "Workspace name to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/CodeServerWorkspaceVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/migrate:
    patch:
      tags:
        - "code-server"
      summary: "Initialize/Create Workbench for user in code-server."
      description: "Create workspace for user in code-server with given password"
      operationId: "updateExistingWorkspace"
      parameters:
        - name: "codeServerMigrateVO"
          in: "body"
          description: "Request Body that contains data required for intialize code server workbench for user"
          required: true
          schema:
            $ref: "#/definitions/CodeServerWorkspaceVO"
      responses:
        201:
          description: "Returns message of success or failure "
          schema:
            $ref: "#/definitions/GenericMessage"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/transparency:
    get:
      tags:
        - "code-server"
      summary: "Number of workspace."
      description: "Get number of workspace. This endpoints will be used to get all valid available workspace records."
      operationId: "getNumberOfWorkspace"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/TransparencyVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
          
  # /workspaces/{id}/config/entitlements:
  #   get:
  #     tags:
  #       - "code-server"
  #     summary: "Get all entitlements for the workspace Id."
  #     description: "Get all entitlements for the workspace Id."
  #     operationId: "getAllEntitlements"
  #     parameters:
  #       - name: "id"
  #         in: "path"
  #         description: "Workspace name to be fetched"
  #         required: true
  #         type: "string"
  #     responses:
  #       201:
  #         description: "Returns message of success or failure"
  #         schema:
  #           $ref: "#/definitions/EntitlementCollectionVO"
  #       204:
  #         description: "Fetch complete, no content found."
  #       400:
  #         description: "Bad request."
  #       401:
  #         description: "Request does not have sufficient credentials."
  #       403:
  #         description: "Request is not authorized."
  #       405:
  #         description: "Method not allowed"
  #       500:
  #         description: "Internal error"
 
  # /workspaces/{id}/config/roles:
  #   get:
  #     tags:
  #       - "code-server"
  #     summary: "Get all roles for the workspace Id."
  #     description: "Get all roles for the workspace Id."
  #     operationId: "getAllRoles"
  #     parameters:
  #       - name: "id"
  #         in: "path"
  #         description: "Workspace name to be fetched"
  #         required: true
  #         type: "string"
  #     responses:
  #       201:
  #         description: "Returns message of success or failure"
  #         schema:
  #           $ref: "#/definitions/RoleCollectionVO"
  #       204:
  #         description: "Fetch complete, no content found."
  #       400:
  #         description: "Bad request."
  #       401:
  #         description: "Request does not have sufficient credentials."
  #       403:
  #         description: "Request is not authorized."
  #       405:
  #         description: "Method not allowed"
  #       500:
  #         description: "Internal error"


  /workspaces/{id}/config/publish:
    get:
      tags:
        - "code-server"
      summary: "Getting values of published security config for a workspace"
      description: "Get published security config details in codeserver workspace"
      operationId: "getPublishedSecurityConfigDetails"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: env
          in: query
          description: environment variable to select the target environment
          required: true
          type: string
          enum:
          - int
          - prod
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/CodespaceSecurityConfigDetailVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/serverstatus:
    get:
      tags:
        - "code-server"
      summary: "Getting status of all servers of particular user"
      description: "Get server status of codeserver workspace"
      operationId: "getAllWorkspaceServerStatus"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/WorkspaceServerStatusVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/serverstatus/{name}:
    get:
      tags:
        - "code-server"
      summary: "Getting status of server for workspace"
      description: "Get server status of codeserver workspace"
      operationId: "getServerStatus"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/ServerStatusVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/startserver/{id}:
    post:
      tags:
        - "code-server"
      summary: "Starting server for workspace"
      description: "to start server of codeserver workspace"
      operationId: "startServer"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "cloudServiceProvider"
          in: query
          description: cloudServiceProvider variable to select the target provider to start
          required: true
          type: string
          enum:
          - DHC-CaaS
          - DHC-CaaS-AWS
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/{id}/collaborator/{collabUserId}/admin:
    post:
      tags:
        - "code-server"
      summary: "make or remove collaborator admin for workspace project ."
      description: "make or remove collaborator admin for workspace project."
      operationId: "makeAdmin"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "collabUserId"
          in: "path"
          description: "Collaborator user id"
          required: true
          type: "string"
        - name: isAdmin
          in: query
          required: true
          type: "boolean"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/{id}/restart:        
    post:
      tags:
        - "code-server"
      summary: "Restart deployed workspace Project for a given Id."
      description: "restart deployed workspace Project for a given identifier."
      operationId: "restartWorkspaceProject"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: env
          in: query
          description: environment variable to select the target environment
          required: true
          type: string
          enum:
          - int
          - prod
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
  
  /workspaces/{id}/migrateworkspace:        
    post:
      tags:
        - "code-server"
      summary: "migrate  workspace Project to Aws for a given Id."
      description: "migrate workspace Project for a given identifier."
      operationId: "migrateWorkspace"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

          
definitions:
  CodeSpaceReadmeVo:
    type: object
    properties:
      file:
        type: string
        format: binary

  RoleCollectionVO:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/CodespaceSecurityConfigLOV"
  
  EntitlementCollectionVO:
    type: object
    properties:
      data:
        type: array
        items:    
          $ref: "#/definitions/CodespaceSecurityConfigLOV"

  TransparencyVO:
    type: object
    properties:
      count:
        type: integer
        description: "Number of workspaces"

  ServerStatusVO:
    type: object
    properties:
      status:
        type: string
        description: "status of server"

  WorkspaceServerStatusVO:
    type: object
    properties:
      status:
        type: array
        items: 
          type: string

  WorkspaceCollectionVO:
    type: object
    properties:
      totalCount:
        type: integer
        description: "Total Record Count"
      records:
        type: array
        items:
          $ref: "#/definitions/CodeServerWorkspaceVO"

  ResourceVO:
    type: object
    properties:
      diskSpace:
        type: string
      minCpu:
        type: string
      maxCpu: 
        type: string
      minRam:
        type: string
      maxRam:
        type: string

  
  WorkspaceUpdateRequestVO:
    type: object
    properties:
#      lastDeployedOn:
#        type: string
#        format: date
#        description: "Date of last deployment"  
      status:
        type: string
        enum: ["CREATED","CREATE_FAILED","DELETED","DELETE_FAILED","DEPLOYED","DEPLOYMENT_FAILED","UNDEPLOYED","UNDEPLOY_FAILED","RESTARTED","RESTART_FAILED"]
        description: "Status of workspace job action create/delete/deploy/restart request"
      targetEnvironment:
        type: string
      branch:
        type: string
      gitjobRunID:
        type: string
      required:
          -status
  CodeServerWorkspaceValidateVO:
    type: object
    properties:
      isValid:
        type: boolean
        description: boolean indicating if user has a access to workspace or not.

  CodeServerWorkspaceVO:
    type: object
    properties:
      id: 
        type: string
        description: "Unique technical ID of workspace"
      workspaceId:
        type: string
        description: "Name of the workspace"
      projectDetails:
       $ref: "#/definitions/CodeServerProjectDetailsVO"
      description:
        type: string
        description: "description of the workspace"
      workspaceOwner:
        $ref: "#/definitions/UserInfoVO"
      gitUserName:
        type: string
        description: git username
      intiatedOn:
        type: string
        format: date
        description: "Date on which workspace is created" 
      workspaceUrl:
        type: string
        description: "Workspace url"
      status:
        type: string
        description: "Status of workspace - COLLABORATION_REQUESTED,CREATE_REQUESTED,CREATED,CREATE_FAILED,DELETE_REQUESTED,DELETED,DELETE_FAILED,DEPLOY_REQUESTED,
        DEPLOYED,DEPLOYMENT_FAILED,UNDEPLOY_REQUESTED,UNDEPLOYED,UNDEPLOY_FAILED"
      serverStatus:
        type: string
        description: "Status of server - SERVER-STARTED,SERVER-STOPPED"
      isWorkspaceMigrated:
        type: boolean
      required:
        -projectDetails
        -workspaceOwner

  CodeServerProjectDetailsVO:
    type: object
    properties:
      projectName:
        type: string
      projectOwner:
        $ref: "#/definitions/UserInfoVO"
      recipeName:
        type: string
      projectCollaborators:
        type: array
        items:
          $ref: "#/definitions/UserInfoVO" 
      prodDeploymentDetails:
        $ref: "#/definitions/CodeServerDeploymentDetailsVO"
      intDeploymentDetails:
        $ref: "#/definitions/CodeServerDeploymentDetailsVO"
      recipeDetails:
        $ref: "#/definitions/CodeServerRecipeDetailsVO"
      gitRepoName:
        type: string
      projectCreatedOn:
        type: string
        format: date
      securityConfig:
        $ref: "#/definitions/CodespaceSecurityConfigVO"
      publishedSecuirtyConfig:
        $ref: "#/definitions/CodespaceSecurityConfigVO"
      dataGovernance:
         $ref: "#/definitions/CodeServerGovernanceVO"
      required:
        -projectName
        -recipeDetails
        
  ManageDeployRequestDto:
    type: object
    properties:
      targetEnvironment:
        type: string
        enum: [int, prod]
      branch:
        type: string
      secureWithIAMRequired:
        type: boolean
      # technicalUserDetailsForIAMLogin:
      #   type: string
      # valutInjectorEnable:  # Corrected property name
      #   type: boolean
        default: false  # This should now work as expected
      clientID:
        type: string
      clientSecret:
        type: string
      redirectUri:
        type: string
      ignorePaths:
        type: string
      scope:
        type: string
      isApiRecipe:
        type: boolean
        required: true
      oneApiVersionShortName:
        type: string
      isSecuredWithCookie :
        type: boolean
      repo :
        type: string


           
  CodeServerDeploymentDetailsVO:
    type: object
    properties:
      lastDeployedOn:
        type: string
        format: date
        description: "Date of last deployment"
      deploymentUrl:
        type: string
        description: "URL of the project deployed"
      secureWithIAMRequired:
        type: boolean
      # technicalUserDetailsForIAMLogin:
      #   type: string    
      lastDeployedBy:
        $ref: "#/definitions/UserInfoVO" 
      lastDeployedBranch:
        type: string
        description: Branch used for last deployment
      lastDeploymentStatus:
        type: string
        description: Status of last deployement
      gitjobRunID:
        type: string
        description: "git job run Id of project deployed"
      oneApiVersionShortName:
        type: string
      isSecuredWithCookie:
        type: boolean
      deploymentType:
        type: string
        enum: [API, UI]
      clientId:
        type: string
      redirectUri:
        type: string
      ignorePaths:
        type: string
      scope:
        type: string
      deploymentAuditLogs:
        type: array
        items:
          $ref: "#/definitions/DeploymentAuditVO"
         
  CodeServerRecipeDetailsVO:
    type: object
    properties:
      Id:
        type: string
        description: "id generated for particular recipe"
      recipeId:
        type: string
        enum: [default,template,springboot,springbootwithmaven,vuejs,py-fastapi,react,angular,gradle,quarkus,dash,expressjs,streamlit,nestjs,micronaut,private-user-defined,public-dna-backend,public-dna-frontend,public-dna-report-backend,public-dna-codespace-backend,public-dna-fabric-mfe,public-dna-fabric-backend,public-dna-dataentry-mfe,public-dna-malware-scanner,public-dna-storage-mfe,public-dna-storage-backend,public-dna-chronos-mfe,public-dna-chronos-backend,public-dna-data-product-mfe,public-dna-data-product-backend,public-dna-dss-mfe,public-dna-dataiku-backend,public-dna-airflow-backend,public-dna-modal-registry-backend,public-dna-trino-backend,public-dna-nass,public-dna-authenticator-backend,public-dna-matomo-mfe,public-dna-matomo-backend,public-dna-datalake-mfe,public-user-defined,bat-frontend,bat-backend]
        description: "RecipeId of the workspace. Ex: Springboot Microservice" 
      recipeName:
        type: string
        description: "description of recipe that created" 
      environment:
        type: string
        enum: [Development, Testing, Production]
      repodetails:
        type: string
        description: "Git URL"      
      cloudServiceProvider:
        type: string
        enum: [DHC-CaaS,DHC-CaaS-AWS]
        description: "Cloud services provider. Ex: DHC-CaaS"
      ramSize:
        type: string
        enum: [1,2]
        description: "RAM size needed"
      cpuCapacity:
        type: string
        enum: [1]
        description: "CPU capacity required"
      operatingSystem:
        type: string
        enum: [Debian-OS-11]
        description: "Operating system required"
      resource:
        type: string
        description: "Storage details of recipe" 
      software:
        type: array
        items:
          type: string
      additionalServices:
        type: array
        items:
          type: string  
      toDeployType:
        type: string
      recipeType:
        type: string
      gitPath:
        type: string
      gitRepoLoc:
        type: string
      isDeployEnabled:
        type: boolean
      required:
        -recipeId
        -recipeName

  SecurityConfigResponseDto: 
    type: object
    properties:
     data:
        $ref: "#/definitions/CodespaceSecurityConfigDetailVO"
     response:
        $ref: "#/definitions/GenericMessage"
        
  SecurityConfigRequestDto: 
    type: object
    properties:
     data:
      $ref: "#/definitions/CodespaceSecurityConfigDetailVO"
      
       
  
  CodespaceSecurityEntitlementVO: 
    type: object
    properties:
      name:
        type: array
        description: "name  of Entitlement"
        items:
          type: string   
      apiPattern:
        type: string
        description: "API Path or Pattern used to validate this entitlement" 
      httpMethod:
        type: string
        enum: ["POST","PUT","PATCH","GET","OPTIONS","HEAD","DELETE"]
        description: "Operating system required" 
      id:
        type: string

  CodespaceSecurityUserRoleMapVO: 
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      shortId:
        type: string
      id:
        type: string
      department:
        type: string
      email:
        type: string
      mobileNumber:
        type: string  
      roles:
        type: array
        items:  
            $ref: "#/definitions/CodespaceSecurityConfigLOV"

  CodespaceSecurityUserRoleMapResponseVO: 
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      shortId:
        type: string
      id:
        type: string
      department:
        type: string
      email:
        type: string
      mobileNumber:
        type: string     
      roles:
        type: array
        items:  
          $ref: "#/definitions/CodespaceSecurityConfigLOV"
        default: []
        
  CodespaceSecurityRoleVO: 
    type: object
    properties:
      id:
        type: string
        description: "Role Id" 
      name:
        type: string
        description: "Role name"   
      roleEntitlements:
          type: array
          items:
            $ref: "#/definitions/CodespaceSecurityConfigLOV"
                           
  CodespaceSecurityConfigLOV:
    type: object
    properties:
      id:
        type: string
        description: "Id" 
      name:
        type: string
        description: "name"  

  CodespaceSecurityApiListVO:
    type: object
    properties:
      apiPattern:
        type: string
        description: "API Path or Pattern used to validate this entitlement" 
      httpMethod:
        type: string
        enum: ["POST","PUT","PATCH","GET","OPTIONS","HEAD","DELETE"]
        description: "Operating system required" 
        

  CodespaceSecurityConfigVO: 
    type: object
    properties:
      # entitlements:
      #   type: array
      #   items:
      #       $ref: "#/definitions/CodespaceSecurityEntitlementVO"
      # appId:
      #   type: string
      # status:
      #   type: string
      #   description: "Status of security configurations"   
      staging:
          $ref: "#/definitions/CodespaceSecurityConfigDetailCollectionVO"
         
      production:
          $ref: "#/definitions/CodespaceSecurityConfigDetailCollectionVO"
      # roles:
      #   type: array
      #   items:
      #     $ref: "#/definitions/CodespaceSecurityRoleVO" 
      # userRoleMappings:
      #   type: array
      #   items:
      #     $ref: "#/definitions/CodespaceSecurityUserRoleMapVO"
      # openSegments:
      #   type: array
      #   items:
      #     type: string
      # isProtectedByDna:
      #   type: boolean
      # requestedDate:
      #   type: string
      # projectName:
      #   type: string
        
  UserIdVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of user"
      required:
        -id

  UserInfoVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of user"
      firstName:
        type: string
        description: "First Name of the user"
      lastName:
        type: string
        description: "Last Name of the user"
      department:
        type: string
        description: "Department of the user"
      email:
        type: string
        description: "E-Mail of the user"
      mobileNumber:
        type: string
        description: "Mobile number of the user" 
      gitUserName:
        type: string
        description: git Username
      isAdmin:
        type: boolean
        description: "is the user has Admin rights"
        default: false
      required:
        -id
        -gitUserName
                     
  BindingResult:
    type: object

  GenericMessage:
    type: object
    properties:
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"

  MessageDescription:
    type: object
    properties:
      message:
        type: string
        description: "message"
  
  InitializeCollabWorkspaceRequestVO:
    type: object
    properties:
#      password:
#        type: string
#        description: "Create Password, required to login to workbench of codeserver"
      pat:
        type: string
        description: "Provide PAT to manage git repositories"
      required:
       - pat
#       - password     
        
  InitializeWorkspaceRequestVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/CodeServerWorkspaceVO"
#      password:
#        type: string
#        description: "Create Password, required to login to workbench of codeserver"
      pat:
        type: string
        description: "Provide PAT to manage git repositories"
      required:
       - pat
#       - password     
       - data
        
  InitializeWorkspaceResponseVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/CodeServerWorkspaceVO"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"  
  
  CreatedByVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of user"
      firstName:
        type: string
        description: "First Name of the user"
      lastName:
        type: string
        description: "Last Name of the user"
      department:
        type: string
        description: "Department of the user"
      email:
        type: string
        description: "E-Mail of the user"
      mobileNumber:
        type: string
        description: "Mobile number of the user" 

  CodespaceSecurityConfigPublishedDetailsVO:
    type: object
    properties:
      projectName:
        type: string
        description: "Name of the Project"
      PublishedSecurityConfig:
        $ref: "#/definitions/CodespaceSecurityConfigVO"

  DataGovernanceRequestInfo:
    type: object
    properties:
      data:
        $ref: "#/definitions/CodeServerGovernanceVO"

  CodeServerGovernanceVO :
    type: object
    properties:
      description:
        type: string
        description: "description type for codespace"
      classificationType:
        type: string
        description: "Classification type for codespace"
      divisionId:
        type: string
        description: "division Id for the codespace"
      division:
        type: string
        description: "division for the codespace"
      subDivisionId:
        type: string
        description: "sub division Id for the codespace"
      subDivision:
        type: string
        description: "sub division for the codespace"
      department:
        type: string
        description: "department for the codespace"
      archerId:
        type: string
        description: "archerId for the codespace"
      procedureID:
        type: string
        description: "producerId for the codespace"
      tags:
        type: array
        items:
          type: string
      typeOfProject:
        type: string
        description: "typeOfProject for the codespace"
      piiData:
        type: boolean
        description: "If codespace contains personally identifiable information"
      required:
        -description
        - division
        -subDivision
        - department
        - classificationType
        -typeOfProject
        -producerId
        -piiData

  DeploymentAuditVO:
    type: object
    properties:
      triggeredBy:
        type: string
        description: "User who triggered deployment of codespace"
      triggeredOn:
        type: string
        format: date
        description: "date on which codespace is deployed triggred"
      deploymentStatus:
        type: string
        description: "status of codespace - DEPLOY_REQUESTED,DEPLOYED,DEPLOYMENT_FAILED."
      deployedOn:
        type: string
        format: date
        description: "date on which codespace deployed"
      branch:
        type: string
        description: "branch one which codespace is deployed"
      commitId:
        type: string
        description: "commit id one which codespace is deployed"

  CodespaceSecurityConfigDetailVO:
    type: object  
    properties:
      entitlements:
        type: array
        items:
            $ref: "#/definitions/CodespaceSecurityEntitlementVO"
      appID:
        type: string
      # openSegments:
      #   type: array
      #   items:
      #     type: string
      # requestedDate:
      #   type: string
      # projectName:
      #   type: string
  CodespaceSecurityConfigDetailCollectionVO:
    type: object  
    properties:
      draft:
            $ref: "#/definitions/CodespaceSecurityConfigDetailVO"
      published:
            $ref: "#/definitions/CodespaceSecurityConfigDetailVO"
