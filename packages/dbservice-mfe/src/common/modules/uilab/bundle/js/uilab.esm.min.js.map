{"version":3,"sources":["../../js/src/util/index.js","../../js/src/navigation.js","../../js/src/button.js","../../js/src/select.js","../../js/src/selection-control.js","../../js/src/input-fields.js","../../js/src/tabs.js","../../js/src/expansion-panel.js","../../js/src/notification.js","../../js/src/tooltip.js","../../js/src/progress-indicator.js"],"names":["makeArray","nodeList","slice","call","getRGB","rgbColorString","match","red","green","blue","getSelectionParent","inputElem","elemWrap","parentNode","classList","contains","setRippleAnimation","elem","center","rbgaColor","mouseInPressedState","addEventListener","e","nodeName","target","stopPropagation","el","animationWrapper","querySelector","clientRect","getBoundingClientRect","x","width","y","height","pageX","window","pageXOffset","pageY","pageYOffset","animationFrame","animationStart","rgb","getComputedStyle","color","requestAnimationFrame","animationStep","timestamp","frame","circle","stop","duration","easing","opacityEasing","style","backgroundImage","cancelAnimationFrame","removeAnimation","getSelectionStart","createTextRange","r","document","selection","createRange","duplicate","moveEnd","value","length","text","lastIndexOf","selectionStart","Navigation","element","this","_element","selectActiveLink","_addEventListeners","querySelectorAll","location","pathname","forEach","activeLink","subNavItem","add","collapseAll","subnavWrapper","remove","removeActive","activeItem","_this","subnavtoggle","clientHeight","toggle","navItem","Button","defaultSetup","btnElem","Select","i","j","selElmnt","a","b","c","getElementsByClassName","getElementsByTagName","createElement","labelWrapper","setAttribute","isMultiSelect","hasAttribute","valuesSpan","appendChild","innerHTML","options","selectedIndex","iconElem","optionLabel","optionValue","optionsWrapper","allCheckBoxElem","previousSibling","allOptions","checkedOptions","allCB","selectElem","checked","getAttribute","selected","k","s","h","childNodes","removeAttribute","click","selectWrapper","nextSibling","closeAllSelect","checkboxElem","cb","manageMultiSelectValues","allSpan","optionsTextArr","push","join","display","elmnt","arrNo","indexOf","SelectionControl","type","switchElem","legendElem","name","InputFields","updateNumericValue","decrease","stepValueText","stepValue","parseFloat","focus","numericValue","decimalFixing","split","toFixed","evt","elemWrapper","errorMsgElem","trim","errorMessage","append","removeChild","upArrow","downArrow","triggerWrapper","top","offsetTop","intervalId","pressedTime","preventDefault","Date","setInterval","clearInterval","getTime","charCode","which","keyCode","number","caratPos","dotPos","validateFloatKeyPress","refresh","inputStepElem","Tabs","tabs","setActiveClass","tabElem","currentTarget","tabsElem","curTabs","tab","moveActiveIndicator","showActiveTabContent","scrollTabs","arrowElem","leftScrollVal","scrollLeft","clientWidth","scroll","left","behavior","manageScrollTriggers","arrowLeftElem","arrowRightElem","scrollWidth","activeIndicator","timeOut","tabsClientRect","tabClientRect","leftScrollCorrection","correctedTabsElemLeftScrollVal","parseInt","setTimeout","activeTab","tabPanel","tabContents","tabContent","tabId","tabItems","firstChild","prepend","timerId","ExpansionPanel","Notification","show","message","hideDelay","notificationElement","messageElement","closeElement","innerText","notificationWrapper","wrapper","getElementById","body","Tooltip","popper","tooltipElement","Popper","placement","destroy","PROGRESS_RING_RADIUS","PROGRESS_RING_X_Y","PROGRESS_BLOCK_WRAPPER_CLASS","PROGRESS_CLASS","PROGRESS_INFINITE_CLASS","PROGRESS_DETERMINITE_CLASS","ProgressIndicator","setupProgressRing","svgCircle","setProgress","percent","circumference","baseVal","Math","PI","strokeDasharray","offset","strokeDashoffset","progress","console","log","progressBlockWrapper","progressElem","determiniteProgress","hide"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * UiLab (v1.0.0): util/index.js\n * --------------------------------------------------------------------------\n */\n\nconst makeArray = nodeList => {\n  if (!nodeList) {\n    return []\n  }\n\n  return [].slice.call(nodeList)\n}\n\nconst getRGB = rgbColorString => {\n  const match = rgbColorString.match(/rgba?\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3})\\)?(?:, ?(\\d(?:\\.\\d?))\\))?/)\n  return match ? { red: match[1], green: match[2], blue: match[3] } : {}\n}\n\nconst getSelectionParent = inputElem => {\n  let elemWrap = inputElem.parentNode\n  if (elemWrap.classList.contains('wrapper')) {\n    elemWrap = elemWrap.parentNode\n  }\n\n  return elemWrap\n}\n\nconst setRippleAnimation = (elem, center = true, rbgaColor) => {\n  let mouseInPressedState = false\n\n  elem.addEventListener('mousedown', e => {\n    const { nodeName } = e.target\n    if (nodeName !== 'INPUT' && nodeName !== 'I' && nodeName !== 'BUTTON' && nodeName !== 'A') {\n      return\n    }\n\n    e.stopPropagation()\n    mouseInPressedState = true\n    let el = elem\n    const animationWrapper = elem.querySelector('.animation-wrapper')\n    if (animationWrapper) {\n      el = animationWrapper\n    }\n\n    const clientRect = el.getBoundingClientRect()\n    let x = clientRect.width / 2\n    let y = clientRect.height / 2\n    if (!center) {\n      x = e.pageX - (clientRect.x + window.pageXOffset)\n      y = e.pageY - (clientRect.y + window.pageYOffset)\n    }\n\n    const duration = 750\n    const offsetDuration = 300\n    const animationStartOpacity = 0.3\n    const opacityLevel = 1.5\n    const stopLevel = 2.5\n    let animationFrame\n    let animationStart\n\n    const rgb = getRGB(rbgaColor || window.getComputedStyle(el).color)\n\n    const animationStep = timestamp => {\n      if (!animationStart) {\n        animationStart = timestamp\n      }\n\n      const frame = timestamp - animationStart\n      const circle = 'circle at ' + x + 'px ' + y + 'px'\n      let color = 'rgba(' + rgb.red + ', ' + rgb.green + ', ' + rgb.blue + ',' + animationStartOpacity + ')'\n      let stop = '100%'\n      if (frame < (duration - offsetDuration)) {\n        const easing = (frame / duration) * (stopLevel - (frame / duration))\n        const opacityEasing = mouseInPressedState ? animationStartOpacity : (animationStartOpacity * (opacityLevel - easing))\n        color = 'rgba(' + rgb.red + ', ' + rgb.green + ', ' + rgb.blue + ', ' + opacityEasing + ')'\n        stop = 90 * easing + '%'\n\n        el.style.backgroundImage = 'radial-gradient(' + circle + ', ' + color + ' ' + stop + ', transparent ' + stop + ')'\n\n        animationFrame = window.requestAnimationFrame(animationStep)\n      } else {\n        if (mouseInPressedState) {\n          el.style.backgroundImage = 'radial-gradient(' + circle + ', ' + color + ' ' + stop + ', transparent ' + stop + ')'\n        } else {\n          el.style.backgroundImage = 'none'\n        }\n\n        window.cancelAnimationFrame(animationFrame)\n      }\n    }\n\n    animationFrame = window.requestAnimationFrame(animationStep)\n  })\n\n  const removeAnimation = () => {\n    let el = elem\n    const animationWrapper = elem.querySelector('.animation-wrapper')\n    if (animationWrapper) {\n      el = animationWrapper\n    }\n\n    el.style.backgroundImage = 'none'\n    mouseInPressedState = false\n  }\n\n  elem.addEventListener('mouseup', removeAnimation)\n  elem.addEventListener('mouseleave', removeAnimation)\n}\n\nconst getSelectionStart = elem => {\n  if (elem.createTextRange) {\n    const r = document.selection.createRange().duplicate()\n    r.moveEnd('character', elem.value.length)\n    if (r.text === '') {\n      return elem.value.length\n    }\n\n    return elem.value.lastIndexOf(r.text)\n  }\n\n  return elem.selectionStart\n}\n\nexport {\n  makeArray,\n  getRGB,\n  getSelectionParent,\n  setRippleAnimation,\n  getSelectionStart\n}\n","/**\n * --------------------------------------------------------------------------\n * UiLab (v1.0.0): navigation.js\n * --------------------------------------------------------------------------\n */\n\nimport {\n  makeArray\n} from './util/index'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nclass Navigation {\n  constructor(element) {\n    this._element = element\n    this.selectActiveLink()\n    this._addEventListeners()\n  }\n\n  selectActiveLink() {\n    makeArray(this._element.querySelectorAll('a[href=\"' + document.location.pathname + '\"]'))\n    .forEach(activeLink => {\n      const subNavItem = activeLink.parentNode.parentNode.parentNode\n      if (subNavItem && subNavItem.classList.contains('has-sub-nav')) {\n        subNavItem.classList.add('opened')\n      }\n    })\n  }\n\n  collapseAll() {\n    makeArray(this._element.querySelectorAll('.has-sub-nav'))\n    .forEach(subnavWrapper => {\n      subnavWrapper.classList.remove('opened')\n    })\n  }\n\n  removeActive() {\n    makeArray(this._element.querySelectorAll('.active'))\n    .forEach(activeItem => {\n      activeItem.classList.remove('active')\n    })\n  }\n\n  _addEventListeners() {\n    makeArray(this._element.querySelectorAll('.has-sub-nav>.nav-link'))\n    .forEach(subnavtoggle => {\n      subnavtoggle.addEventListener('click', e => {\n        const subNavItem = e.target.parentNode\n\n        if (subNavItem.classList.contains('opened')) {\n          subNavItem.style.height = null\n        } else {\n          subNavItem.style.height = (subNavItem.querySelectorAll('.nav-link').length * (subNavItem.clientHeight + 2) - 1) + 'px'\n        }\n\n        subNavItem.classList.toggle('opened')\n      })\n    })\n    makeArray(this._element.querySelectorAll('.nav-item:not(.has-sub-nav)'))\n    .forEach(navItem => {\n      navItem.addEventListener('click', e => {\n        this.removeActive()\n        e.target.parentNode.classList.add('active')\n      })\n    })\n  }\n}\n\nexport default Navigation\n","/**\n * --------------------------------------------------------------------------\n * UiLab (v1.0.0): button.js\n * --------------------------------------------------------------------------\n */\n\nimport {\n  makeArray,\n  setRippleAnimation\n} from './util/index'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nclass Button {\n  static defaultSetup() {\n    // Setup Button click animation\n    makeArray(document.querySelectorAll('.btn:not(.btn-text)'))\n    .forEach(btnElem => {\n      if (btnElem.classList.contains('btn-secondary')) {\n        setRippleAnimation(btnElem, false, 'rgba(192, 200, 208, 1)')\n      } else if (btnElem.classList.contains('btn-icon-circle')) {\n        setRippleAnimation(btnElem)\n      } else {\n        setRippleAnimation(btnElem, false)\n      }\n    })\n  }\n}\n\nButton.defaultSetup()\n\nexport default Button\n","/**\n * --------------------------------------------------------------------------\n * UiLab (v1.0.0): select.js\n * --------------------------------------------------------------------------\n */\n\nimport {\n  setRippleAnimation, makeArray\n} from './util/index'\n\nclass Select {\n  static defaultSetup() {\n    let i\n    let j\n    let selElmnt\n    let a\n    let b\n    let c\n    /* Look for any elements with the class 'custom-select': */\n    const x = document.getElementsByClassName('custom-select')\n    for (i = 0; i < x.length; i++) {\n      selElmnt = x[i].getElementsByTagName('select')[0]\n      /* For each element, create a new DIV that will act as the selected item: */\n      a = document.createElement('DIV')\n      const labelWrapper = document.createElement('SPAN')\n      labelWrapper.setAttribute('class', 'label')\n      const isMultiSelect = selElmnt.hasAttribute('multiple')\n\n      /* For each element, create a new DIV that will contain the option list: */\n      b = document.createElement('DIV')\n\n      if (isMultiSelect) {\n        const valuesSpan = document.createElement('SPAN')\n        valuesSpan.setAttribute('class', 'values')\n        a.appendChild(valuesSpan)\n        a.setAttribute('class', 'select-selected multiple')\n        b.setAttribute('class', 'select-items multiple select-hide')\n        labelWrapper.innerHTML = '<label class=\"checkbox\"><span class=\"wrapper\"><input type=\"checkbox\" value=\"label\"/></span><span class=\"label\">All</span></label>'\n      } else {\n        a.setAttribute('class', 'select-selected')\n        b.setAttribute('class', 'select-items select-hide')\n        labelWrapper.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML\n      }\n\n      a.appendChild(labelWrapper)\n      const animationWrapper = document.createElement('SPAN')\n      animationWrapper.setAttribute('class', 'animation-wrapper')\n      a.appendChild(animationWrapper)\n      const iconElem = document.createElement('I')\n      iconElem.setAttribute('class', 'icon down-up-flip')\n      a.appendChild(iconElem)\n      x[i].appendChild(a)\n      setRippleAnimation(a.parentNode)\n\n      for (j = 0; j < selElmnt.length; j++) {\n        /* For each option in the original select element,\n      create a new DIV that will act as an option item: */\n        c = document.createElement('DIV')\n\n        const optionLabel = selElmnt.options[j].innerHTML\n        const optionValue = selElmnt.options[j].value\n        if (isMultiSelect) {\n          c.innerHTML = '<label class=\"checkbox\"><span class=\"wrapper\"><input type=\"checkbox\" data-index=\"' + j + '\" value=\"' + optionValue + '\"/></span><span class=\"label\">' + optionLabel + '</span></label>'\n          c.addEventListener('click', function (e) {\n            e.stopPropagation()\n            const optionsWrapper = this.parentNode\n            const allCheckBoxElem = optionsWrapper.previousSibling.querySelector('.checkbox')\n            if (e.target.nodeName === 'INPUT') {\n              const allOptions = optionsWrapper.querySelectorAll('input[type=\"checkbox\"]').length\n              const checkedOptions = optionsWrapper.querySelectorAll('input[type=\"checkbox\"]:checked').length\n              const allCB = allCheckBoxElem.querySelector('input[type=\"checkbox\"]')\n              const selectElem = optionsWrapper.parentNode.querySelector('select')\n              allCB.checked = (allOptions === checkedOptions)\n\n              if (allCB.checked) {\n                allCheckBoxElem.classList.add('checked')\n              } else {\n                allCheckBoxElem.classList.remove('checked')\n              }\n\n              selectElem.options[e.target.getAttribute('data-index')].selected = e.target.checked\n            }\n          })\n        } else {\n          if (j === 0) {\n            c.setAttribute('class', 'same-as-selected')\n          }\n\n          c.innerHTML = optionLabel\n\n          c.addEventListener('click', function () {\n            /* When an item is clicked, update the original select box,\n            and the selected item: */\n            let y\n            let i\n            let k\n            const s = this.parentNode.parentNode.getElementsByTagName('select')[0]\n            const h = this.parentNode.previousSibling.childNodes[0]\n            for (i = 0; i < s.length; i++) {\n              if (s.options[i].innerHTML === this.innerHTML) {\n                s.selectedIndex = i\n                h.innerHTML = this.innerHTML\n                y = this.parentNode.getElementsByClassName('same-as-selected')\n                for (k = 0; k < y.length; k++) {\n                  y[k].removeAttribute('class')\n                }\n\n                this.setAttribute('class', 'same-as-selected')\n                break\n              }\n            }\n\n            h.click()\n          })\n        }\n\n        b.appendChild(c)\n      }\n\n      x[i].appendChild(b)\n      a.addEventListener('click', function (e) {\n        /* When the select box is clicked, close any other select boxes,\n      and open/close the current select box: */\n        const selectWrapper = e.target.parentNode\n        const optionsWrapper = this.nextSibling\n        if (selectWrapper.nodeName === 'DIV') {\n          e.stopPropagation()\n          closeAllSelect(this)\n          this.nextSibling.classList.toggle('select-hide')\n          this.classList.toggle('open')\n        } else {\n          e.stopPropagation()\n\n          if (e.target.nodeName === 'INPUT') {\n            const selectElem = optionsWrapper.parentNode.querySelector('select')\n            makeArray(optionsWrapper.querySelectorAll('.checkbox'))\n            .forEach(checkboxElem => {\n              const cb = checkboxElem.querySelector('input[type=\"checkbox\"]')\n              if (e.target.checked) {\n                checkboxElem.classList.add('checked')\n              } else {\n                checkboxElem.classList.remove('checked')\n              }\n\n              cb.checked = e.target.checked\n              selectElem.options[cb.getAttribute('data-index')].selected = e.target.checked\n            })\n          }\n        }\n\n        // Code for mutiple select\n        if (this.classList.contains('multiple')) {\n          manageMultiSelectValues(this)\n        }\n      })\n    }\n\n    function manageMultiSelectValues(selectElem) {\n      const checkedOptions = selectElem.nextSibling.querySelectorAll('.checkbox.checked')\n      const valuesSpan = selectElem.querySelector('.values')\n      const allSpan = selectElem.querySelector('.checkbox>.label')\n      const optionsTextArr = []\n      makeArray(checkedOptions).forEach(checkboxElem => {\n        optionsTextArr.push(checkboxElem.querySelector('.label').innerHTML)\n      })\n\n      if (optionsTextArr.length && !selectElem.classList.contains('open')) {\n        valuesSpan.innerHTML = optionsTextArr.join(', ')\n        allSpan.style.display = 'none'\n      } else {\n        valuesSpan.innerHTML = ''\n        allSpan.style.display = ''\n      }\n    }\n\n    function closeAllSelect(elmnt) {\n      /* A function that will close all select boxes in the document,\n    except the current select box: */\n      let i\n      const arrNo = []\n      const x = document.getElementsByClassName('select-items')\n      const y = document.getElementsByClassName('select-selected')\n      for (i = 0; i < y.length; i++) {\n        const el = y[i]\n        if (elmnt === el) {\n          arrNo.push(i)\n        } else {\n          el.classList.remove('open')\n        }\n\n        // Code for mutiple select\n        if (el.classList.contains('multiple')) {\n          manageMultiSelectValues(el)\n        }\n      }\n\n      for (i = 0; i < x.length; i++) {\n        if (arrNo.indexOf(i)) {\n          x[i].classList.add('select-hide')\n        }\n      }\n    }\n\n    /* If the user clicks anywhere outside the select box,\n  then close all select boxes: */\n    document.addEventListener('click', closeAllSelect)\n  }\n}\nSelect.defaultSetup()\n\nexport default Select\n","/**\n * --------------------------------------------------------------------------\n * UiLab (v1.0.0): selection-control.js\n * --------------------------------------------------------------------------\n */\n\nimport {\n  makeArray,\n  getSelectionParent,\n  setRippleAnimation\n} from './util/index'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nclass SelectionControl {\n  static defaultSetup() {\n    // Setup Animation for Selection Controls\n    makeArray(document.querySelectorAll('.checkbox input, .radio input, .legend input'))\n    .forEach(elem => {\n      setRippleAnimation(elem.parentNode)\n\n      if (elem.type === 'checkbox') {\n        elem.addEventListener('change', e => {\n          const elemWrap = getSelectionParent(e.target)\n          if (e.target.checked) {\n            elemWrap.classList.add('checked')\n          } else {\n            elemWrap.classList.remove('checked')\n          }\n        })\n      }\n    })\n    // Setup Selection Control switch\n    makeArray(document.querySelectorAll('.switch input'))\n    .forEach(switchElem => {\n      setRippleAnimation(switchElem.parentNode)\n      switchElem.addEventListener('change', e => {\n        const elemWrap = getSelectionParent(e.target)\n        if (e.target.checked) {\n          elemWrap.classList.add('on')\n        } else {\n          elemWrap.classList.remove('on')\n        }\n      })\n    })\n    // Setup Selection Control legend\n    makeArray(document.querySelectorAll('.legend input'))\n    .forEach(legendElem => {\n      legendElem.addEventListener('change', e => {\n        const elemWrap = getSelectionParent(e.target)\n\n        makeArray(document.querySelectorAll('.legend input[name=' + e.target.name + ']'))\n        .forEach(elem => {\n          if (!elem.checked) {\n            getSelectionParent(elem).classList.remove('active')\n          }\n        })\n\n        elemWrap.classList.add('active')\n      })\n    })\n  }\n}\n\nSelectionControl.defaultSetup()\n\nexport default SelectionControl\n","/**\n * --------------------------------------------------------------------------\n * UiLab (v1.0.0): InputFields.js\n * --------------------------------------------------------------------------\n */\n\nimport {\n  makeArray,\n  getSelectionStart\n} from './util/index'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nclass InputFields {\n  static defaultSetup() {\n    function validateFloatKeyPress(el, evt) {\n      const charCode = (evt.which) ? evt.which : evt.keyCode\n      const number = el.value.split('.')\n      if (charCode !== 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n        return false\n      }\n\n      // just one dot (thanks ddlab)\n      if (number.length > 1 && charCode === 46) {\n        return false\n      }\n\n      // get the carat position\n      const caratPos = getSelectionStart(el)\n      const dotPos = el.value.indexOf('.')\n      if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {\n        return false\n      }\n\n      return true\n    }\n\n    function updateNumericValue(inputElem, decrease) {\n      const stepValueText = inputElem.getAttribute('step-value')\n      const stepValue = parseFloat(stepValueText)\n      inputElem.focus()\n      let numericValue = parseFloat(inputElem.value || 0)\n      if (decrease) {\n        numericValue -= stepValue\n      } else {\n        numericValue += stepValue\n      }\n\n      let decimalFixing = 0\n      if (stepValueText.indexOf('.') !== -1) {\n        decimalFixing = stepValueText.split('.')[1].length\n      }\n\n      inputElem.value = numericValue.toFixed(decimalFixing)\n    }\n\n    // Setup InputFields click animation\n    makeArray(document.querySelectorAll('.input-field, .input-field-area'))\n    .forEach(inputElem => {\n      inputElem.addEventListener('focus', evt => {\n        evt.target.parentNode.classList.add('focused')\n      })\n\n      inputElem.addEventListener('blur', evt => {\n        const elem = evt.target\n        const elemWrapper = elem.parentNode\n        elemWrapper.classList.remove('focused')\n        let errorMsgElem = elemWrapper.querySelector('.error-message')\n\n        if (elem.hasAttribute('required') && elem.value.trim() === '') {\n          elemWrapper.classList.add('error')\n\n          if (elem.hasAttribute('required-error')) {\n            const errorMessage = elem.getAttribute('required-error')\n            if (errorMsgElem) {\n              errorMsgElem.innerHTML = errorMessage\n            } else {\n              errorMsgElem = document.createElement('SPAN')\n              errorMsgElem.classList.add('error-message')\n              errorMsgElem.innerHTML = errorMessage\n              elemWrapper.append(errorMsgElem)\n            }\n          }\n        } else {\n          elemWrapper.classList.remove('error')\n          if (errorMsgElem) {\n            elemWrapper.removeChild(errorMsgElem)\n          }\n        }\n      })\n\n      if (inputElem.classList.contains('numeric')) {\n        const elemWrapper = inputElem.parentNode\n        const stepValue = inputElem.hasAttribute('step-value')\n\n        if (stepValue) {\n          inputElem.classList.add('has-step-value')\n          const upArrow = document.createElement('I')\n          const downArrow = document.createElement('I')\n          upArrow.classList.add('icon', 'arrow', 'up')\n          downArrow.classList.add('icon', 'arrow', 'down')\n          const triggerWrapper = document.createElement('DIV')\n          triggerWrapper.classList.add('trigger-wrapper')\n          triggerWrapper.style.top = inputElem.offsetTop + 'px'\n          triggerWrapper.append(upArrow)\n          triggerWrapper.append(downArrow)\n          elemWrapper.append(triggerWrapper)\n          const intervalTimeout = 300\n          let intervalId\n          let pressedTime\n\n          downArrow.addEventListener('mousedown', evt => {\n            evt.preventDefault()\n            pressedTime = new Date()\n            intervalId = setInterval(() => {\n              updateNumericValue(inputElem, true)\n            }, intervalTimeout)\n          })\n\n          upArrow.addEventListener('mousedown', evt => {\n            evt.preventDefault()\n            pressedTime = new Date()\n            intervalId = setInterval(() => {\n              updateNumericValue(inputElem)\n            }, intervalTimeout)\n          })\n\n          upArrow.addEventListener('mouseup', () => {\n            clearInterval(intervalId)\n          })\n\n          downArrow.addEventListener('mouseup', () => {\n            clearInterval(intervalId)\n          })\n\n          window.addEventListener('mouseup', () => {\n            clearInterval(intervalId)\n          })\n\n          downArrow.addEventListener('click', () => {\n            if (new Date().getTime() - pressedTime.getTime() < intervalTimeout) {\n              updateNumericValue(inputElem, true)\n            }\n          })\n\n          upArrow.addEventListener('click', () => {\n            if (new Date().getTime() - pressedTime.getTime() < intervalTimeout) {\n              updateNumericValue(inputElem)\n            }\n          })\n        }\n\n        inputElem.addEventListener('keypress', evt => {\n          if (!validateFloatKeyPress(evt.target, evt)) {\n            evt.preventDefault()\n          }\n        })\n      }\n    })\n  }\n\n  static refresh() {\n    makeArray(document.querySelectorAll('.has-step-value'))\n    .forEach(inputStepElem => {\n      inputStepElem.parentNode.querySelector('.trigger-wrapper').style.top = inputStepElem.offsetTop + 'px'\n    })\n  }\n}\n\nInputFields.defaultSetup()\n\nexport default InputFields\n","import {\n  setRippleAnimation, makeArray\n} from './util/index'\nimport InputFields from './input-fields'\n\nclass Tabs {\n  constructor(element) {\n    this._element = element\n  }\n\n  static defaultSetup() {\n    const tabs = document.querySelectorAll('.tabs')\n\n    makeArray(tabs).forEach(tabsElem => {\n      const tabItems = tabsElem.getElementsByClassName('tab')\n\n      const activeIndicator = document.createElement('SPAN')\n      activeIndicator.setAttribute('class', 'active-indicator')\n\n      makeArray(tabItems).forEach(tabElem => {\n        tabElem.addEventListener('click', setActiveClass)\n\n        if (tabElem.classList.contains('active')) {\n          moveActiveIndicator(tabsElem, tabElem, activeIndicator)\n          showActiveTabContent(tabElem, tabsElem.parentNode.parentNode.parentNode)\n        }\n\n        setRippleAnimation(tabElem.firstChild, false, 'rgba(192, 200, 208, 1)')\n      })\n\n      if (tabsElem.scrollWidth > tabsElem.clientWidth) {\n        const tabPanel = tabsElem.parentNode.parentNode\n        const arrowLeftElem = document.createElement('BUTTON')\n        arrowLeftElem.setAttribute('class', 'previous')\n        arrowLeftElem.innerHTML = '<i class=\"icon arrow left\"></i>'\n        tabPanel.prepend(arrowLeftElem)\n        const arrowRightElem = document.createElement('BUTTON')\n        arrowRightElem.setAttribute('class', 'next')\n        arrowRightElem.innerHTML = '<i class=\"icon arrow right\"></i>'\n        tabPanel.append(arrowRightElem)\n        tabPanel.classList.add('scrollable')\n        setRippleAnimation(arrowLeftElem, true, 'rgba(0, 173, 239, 1)')\n        setRippleAnimation(arrowRightElem, true, 'rgba(0, 173, 239, 1)')\n        arrowLeftElem.addEventListener('click', scrollTabs)\n        arrowRightElem.addEventListener('click', scrollTabs)\n        let timerId = 0\n        tabsElem.addEventListener('scroll', e => {\n          clearInterval(timerId)\n          timerId = setTimeout(() => {\n            manageScrollTriggers(e.target, arrowLeftElem, arrowRightElem)\n          }, 100)\n        })\n\n        manageScrollTriggers(tabsElem, arrowLeftElem, arrowRightElem)\n      }\n\n      tabsElem.appendChild(activeIndicator)\n    })\n\n    function setActiveClass(evt) {\n      evt.preventDefault()\n      const tabElem = evt.currentTarget\n      const tabsElem = tabElem.parentNode\n      const curTabs = tabsElem.querySelectorAll('.tab')\n      makeArray(curTabs).forEach(tab => {\n        tab.classList.remove('active')\n      })\n\n      moveActiveIndicator(tabsElem, tabElem)\n\n      tabElem.classList.add('active')\n\n      showActiveTabContent(tabElem, tabsElem.parentNode.parentNode.parentNode)\n    }\n\n    function scrollTabs(evt) {\n      const arrowElem = evt.currentTarget\n      const tabNavElem = arrowElem.parentNode\n      const tabsElem = tabNavElem.querySelector('.tabs')\n      let leftScrollVal = 0\n      if (arrowElem.classList.contains('next')) {\n        leftScrollVal = tabsElem.scrollLeft + tabsElem.clientWidth\n      } else {\n        leftScrollVal = tabsElem.scrollLeft - tabsElem.clientWidth\n      }\n\n      tabsElem.scroll({\n        left: leftScrollVal,\n        behavior: 'smooth'\n      })\n    }\n\n    function manageScrollTriggers(tabsElem, arrowLeftElem, arrowRightElem) {\n      arrowLeftElem.classList.remove('hide')\n      arrowRightElem.classList.remove('hide')\n      if (!tabsElem.scrollLeft) {\n        arrowLeftElem.classList.add('hide')\n      } else if (tabsElem.scrollWidth - tabsElem.scrollLeft === tabsElem.clientWidth) {\n        arrowRightElem.classList.add('hide')\n      }\n    }\n\n    function moveActiveIndicator(tabsElem, tabElem, activeIndicator) {\n      let timeOut = 0\n      if (activeIndicator) {\n        timeOut = 500\n      } else {\n        activeIndicator = tabsElem.querySelector('.active-indicator')\n      }\n\n      const tabsClientRect = tabsElem.getBoundingClientRect()\n      const tabClientRect = tabElem.getBoundingClientRect()\n      const leftScrollVal = (tabClientRect.x - tabsClientRect.x) + tabsElem.scrollLeft\n      activeIndicator.style.width = tabClientRect.width + 'px'\n      activeIndicator.style.left = leftScrollVal + 'px'\n\n      let leftScrollCorrection = 0\n      let correctedTabsElemLeftScrollVal = 0\n      if (tabClientRect.left < tabsClientRect.left) {\n        leftScrollCorrection = parseInt(tabsClientRect.left - tabClientRect.left, 10)\n        correctedTabsElemLeftScrollVal = tabsElem.scrollLeft - leftScrollCorrection\n      } else if (tabClientRect.left + tabClientRect.width > tabsClientRect.left + tabsClientRect.width) {\n        leftScrollCorrection = parseInt(((tabClientRect.left + tabClientRect.width) - (tabsClientRect.left + tabsClientRect.width)), 10)\n        correctedTabsElemLeftScrollVal = leftScrollCorrection ? tabsElem.scrollLeft + leftScrollCorrection : 0\n      }\n\n      if (leftScrollCorrection) {\n        setTimeout(() => {\n          tabsElem.scroll({\n            left: correctedTabsElemLeftScrollVal,\n            behavior: 'smooth'\n          })\n\n          if (timeOut) {\n            moveActiveIndicator(tabsElem, tabElem)\n          }\n        }, timeOut)\n      }\n    }\n\n    function showActiveTabContent(activeTab, tabPanel) {\n      const tabContents = tabPanel.querySelectorAll('.tab-content')\n      makeArray(tabContents).forEach(tabContent => {\n        tabContent.classList.remove('active')\n      })\n      const tabId = activeTab.querySelector('a').getAttribute('href')\n      if (tabId) {\n        tabPanel.querySelector(tabId).classList.add('active')\n      }\n\n      InputFields.refresh()\n    }\n  }\n}\nTabs.defaultSetup()\n\nexport default Tabs\n","/**\n * --------------------------------------------------------------------------\n * UiLab (v1.0.0): expansion-panel.js\n * --------------------------------------------------------------------------\n */\n\nimport {\n  makeArray,\n  getSelectionParent,\n  setRippleAnimation\n} from './util/index'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nclass ExpansionPanel {\n  static defaultSetup() {\n    // Setup Animation for Expansion Controls\n    makeArray(document.querySelectorAll('.expansion-panel input'))\n    .forEach(elem => {\n      setRippleAnimation(elem.parentNode)\n      if (elem.type === 'checkbox') {\n        elem.addEventListener('change', e => {\n          const elemWrap = getSelectionParent(e.target)\n          if (e.target.checked) {\n            elemWrap.classList.add('open')\n          } else {\n            elemWrap.classList.remove('open')\n          }\n        })\n      }\n    })\n  }\n}\n\nExpansionPanel.defaultSetup()\n\nexport default ExpansionPanel\n","/**\n * --------------------------------------------------------------------------\n * UiLab (v1.0.0): notification.js\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nclass Notification {\n  static show(message, type = 'success', hideDelay = 6000) {\n    const notificationElement = document.createElement('DIV')\n    const messageElement = document.createElement('P')\n    const closeElement = document.createElement('I')\n    closeElement.classList.add('icon', 'close')\n    notificationElement.classList.add('notification', 'toast')\n    if (type) {\n      notificationElement.classList.add(type)\n    }\n\n    messageElement.innerText = message\n    notificationElement.append(messageElement)\n    notificationElement.append(closeElement)\n\n    closeElement.addEventListener('click', evt => {\n      evt.target.parentNode.classList.add('hide')\n    })\n\n    notificationElement.addEventListener('transitionend', evt => {\n      const notificationElement = evt.target\n      const notificationWrapper = notificationElement.parentNode\n      if (notificationWrapper && notificationElement.classList.contains('hide')) {\n        notificationWrapper.removeChild(notificationElement)\n        if (!notificationWrapper.childNodes.length) {\n          notificationWrapper.parentNode.removeChild(notificationWrapper)\n        }\n\n        if (notificationWrapper.childNodes.length > 3) {\n          notificationWrapper.firstChild.classList.remove('show')\n          notificationWrapper.firstChild.classList.add('hide')\n        }\n      }\n    })\n\n    const wrapper = document.getElementById('notification-wrapper')\n    if (wrapper) {\n      wrapper.append(notificationElement)\n      if (wrapper.childNodes.length > 3) {\n        wrapper.firstChild.classList.add('hide')\n      }\n    } else {\n      const notificationWrapper = document.createElement('DIV')\n      notificationWrapper.setAttribute('id', 'notification-wrapper')\n      notificationWrapper.classList.add('notification-wrapper')\n      notificationWrapper.append(notificationElement)\n      document.body.append(notificationWrapper)\n    }\n\n    setTimeout(() => {\n      notificationElement.classList.add('show')\n      if (wrapper && wrapper.childNodes.length > 3) {\n        notificationElement.classList.add('delay')\n      }\n    }, 20)\n\n    if (wrapper && wrapper.childNodes.length > 3) {\n      setTimeout(() => {\n        notificationElement.classList.remove('delay')\n      }, 100)\n    }\n\n    setTimeout(() => {\n      notificationElement.classList.add('hide')\n    }, hideDelay)\n  }\n}\n\nexport default Notification\n","/**\n * --------------------------------------------------------------------------\n * UiLab (v1.0.0): tooltip.js\n * --------------------------------------------------------------------------\n */\n\nimport {\n  makeArray\n} from './util/index'\nimport Popper from 'popper.js'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nclass Tooltip {\n  static defaultSetup() {\n    makeArray(document.querySelectorAll('[tooltip-data]'))\n    .forEach(elem => {\n      let popper = null\n      elem.addEventListener('mouseover', () => {\n        const message = elem.getAttribute('tooltip-data')\n        const tooltipElement = document.createElement('DIV')\n        tooltipElement.classList.add('tooltip')\n        tooltipElement.innerText = message\n        document.body.append(tooltipElement)\n        setTimeout(() => {\n          tooltipElement.classList.add('show')\n        }, 20)\n        popper = new Popper(elem, tooltipElement, { placement: 'top' })\n      })\n\n      elem.addEventListener('mouseout', () => {\n        const elem = document.querySelector('.tooltip')\n        elem.parentNode.removeChild(elem)\n        popper.destroy()\n      })\n    })\n  }\n}\n\nTooltip.defaultSetup()\n\nexport default Tooltip\n","/**\n * --------------------------------------------------------------------------\n * UiLab (v1.0.0): progress-indicator.js\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\nconst PROGRESS_RING_RADIUS = 22.5\nconst PROGRESS_RING_X_Y = 25\nconst PROGRESS_BLOCK_WRAPPER_CLASS = 'progress-block-wrapper'\nconst PROGRESS_CLASS = 'progress'\nconst PROGRESS_INFINITE_CLASS = 'infinite'\nconst PROGRESS_DETERMINITE_CLASS = 'determinite'\n\nclass ProgressIndicator {\n  constructor(element) {\n    this._element = element\n    this.setupProgressRing()\n  }\n\n  setupProgressRing() {\n    const svgCircle = `<circle class=\"progress-ring-circle\" r=\"${PROGRESS_RING_RADIUS}\" cx=\"${PROGRESS_RING_X_Y}\" cy=\"${PROGRESS_RING_X_Y}\" />`\n    this._element.innerHTML = `<svg class=\"progress-ring\">${svgCircle}</svg>`\n  }\n\n  setProgress(percent) {\n    const circle = this._element.querySelector('circle')\n    const radius = circle.r.baseVal.value\n    const circumference = radius * 2 * Math.PI\n    circle.style.strokeDasharray = `${circumference} ${circumference}`\n    const offset = circumference - percent / 100 * circumference\n    circle.style.strokeDashoffset = offset\n  }\n\n  static show(progress) {\n    console.log(document.body.querySelector('.' + PROGRESS_BLOCK_WRAPPER_CLASS))\n    const progressBlockWrapper = document.body.querySelector('.' + PROGRESS_BLOCK_WRAPPER_CLASS) || document.createElement('DIV')\n    progressBlockWrapper.innerHTML = ''\n    const progressElem = document.createElement('DIV')\n    progressBlockWrapper.classList.add(PROGRESS_BLOCK_WRAPPER_CLASS)\n    progressElem.classList.add(PROGRESS_CLASS)\n    this._element = progressElem\n    if (progress) {\n      progressElem.classList.add(PROGRESS_DETERMINITE_CLASS)\n      this.determiniteProgress = new this(progressElem)\n      this.determiniteProgress.setProgress(progress)\n    } else {\n      progressElem.classList.add(PROGRESS_INFINITE_CLASS)\n    }\n\n    progressBlockWrapper.append(progressElem)\n    document.body.append(progressBlockWrapper)\n  }\n\n  static setProgress(progress) {\n    if (this.determiniteProgress) {\n      this.determiniteProgress.setProgress(progress)\n    }\n  }\n\n  static hide() {\n    const progressBlockWrapper = this._element ? this._element.parentNode : document.body.querySelector('.' + PROGRESS_BLOCK_WRAPPER_CLASS)\n    if (progressBlockWrapper && progressBlockWrapper.classList.contains(PROGRESS_BLOCK_WRAPPER_CLASS)) {\n      progressBlockWrapper.parentNode.removeChild(progressBlockWrapper)\n    }\n  }\n}\n\nexport default ProgressIndicator\n"]}