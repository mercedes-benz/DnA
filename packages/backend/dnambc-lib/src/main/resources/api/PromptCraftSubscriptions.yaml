# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
# 
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : projectstatuses.yaml
#  **
#  ** Module     : core
#  ** 

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  aravindh24
#
#  Bug Number         :  
#  Changed By         :  
#  Change Description :  
#  Change On          :  
#  Search String      :  
#  
#  -------------------------------------------------------------------------------------------------------
  

swagger: "2.0"
info:
 version: "1.0.0"
 title: " promptCraftSubscriptions Service"
host: "localhost:7171"
basePath: "/api/1.0"
consumes:
 - "application/json"
produces:
 - "application/json"
tags:
 - name: "promptCraftSubscriptions"
   description: "This service is used to maintain prompt-craft subscriptions."

schemes:
- "https"


# path to create and manage promptcraft Subscriptions or by intent
#
#  supprorted http methods GET, POST 
#
# path example ../promptCraftSubscriptions

paths:

  /promptCraftSubscriptions/create:
    post:
        tags:
          - "promptCraftSubscriptions"
        summary: "Adds a new Subscription."
        description: "Adds a new Subscriptions."
        operationId: "create"
        parameters:
          - name: "subscriptionRequestVO"
            in: "body"
            description: "Request Body that contains data required for creating a new Subscriptions"
            required: true
            schema:
              $ref: "#/definitions/SubscriptionRequestVO"    
        responses:
          201:
            description: "Returns message of succes or failure "
            schema:
              $ref: "#/definitions/PromptCraftSubscriptionsResponseVO"
          400:
            description: "Bad Request"
            schema:
              $ref: "#/definitions/GenericMessage"
          401:
            description: "Request does not have sufficient credentials."
          403:
            description: "Request is not authorized."
          405:
            description: "Method not allowed"
          500:
            description: "Internal error"

  
  /promptCraftSubscriptions/{projectName}/refresh:
    post:
        tags:
          - "promptCraftSubscriptions"
        summary: "refresh to get  Subscription keys."
        description: "refresh to get Subscriptionkeys."
        operationId: "refresh"
        parameters:
          - name: "projectName"
            in: "path"
            required: true
            type: "string"    
        responses:
          201:
            description: "Returns message of succes or failure "
            schema:
              $ref: "#/definitions/GenericMessage"
          400:
            description: "Bad Request"
            schema:
              $ref: "#/definitions/GenericMessage"
          401:
            description: "Request does not have sufficient credentials."
          403:
            description: "Request is not authorized."
          405:
            description: "Method not allowed"
          500:
            description: "Internal error"

  /promptCraftSubscriptions/{projectName}/getkeys:
    get:
        tags:
          - "promptCraftSubscriptions"
        summary: " get  Subscription keys."
        description: " get Subscriptionkeys."
        operationId: "getkeys"
        parameters:
          - name: "projectName"
            in: "path"
            required: true
            type: "string"    
        responses:
          201:
            description: "Returns message of succes or failure "
            schema:
              $ref: "#/definitions/SubscriptionkeysResponseVO"
          400:
            description: "Bad Request"
          401:
            description: "Request does not have sufficient credentials."
          403:
            description: "Request is not authorized."
          405:
            description: "Method not allowed"
          500:
            description: "Internal error"

  /promptCraftSubscriptions:
    get:
        tags:
          - "promptCraftSubscriptions"
        summary: "get all Subscriptions."
        description: "get all Subscriptions."
        operationId: "getAll" 
        parameters:
          - name: offset
            in: query
            description: page number from which listing of subscriptions should start. Offset. Example 2
            required: false
            type: integer
          - name: limit
            in: query
            description: page size to limit the number of subscriptions, Example 15
            required: false
            type: integer
        responses:
          201:
            description: "Returns message of succes or failure "
            schema:
              $ref: "#/definitions/PromptCraftSubscriptionCollectionVO"
          400:
            description: "Bad Request"
            schema:
              $ref: "#/definitions/GenericMessage"
          401:
            description: "Request does not have sufficient credentials."
          403:
            description: "Request is not authorized."
          405:
            description: "Method not allowed"
          500:
            description: "Internal error"



     


definitions:

  PromptCraftSubscriptionsResponseVO:
    type: object
    properties: 
      data:
        $ref: "#/definitions/PromptCraftSubscriptionsVO"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"

  PromptCraftSubscriptionsVO:
    type: object
    properties:
      id:
        type: string
      projectName:  
        type: string
      orgName:
        type: string
        minLength: 3
      createdOn:
        type: string
        format: date
      projectOwner:
        $ref: "#/definitions/MemberInfoVO"
      projectMembers:
        type: array
        items: 
          $ref: "#/definitions/MemberInfoVO"
      status:
        type: string
      runId:
        type: string
    required:
      - projectName
      - orgName
      - projectMembers

  MemberInfoVO:
    type: object
    properties:
      id:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      department:
        type: string
      email:
        type: string
      mobileNumber:
        type: string
          

  PromptCraftSubscriptionCollectionVO:
    type: object
    properties:
      data:
        type: array
        items:  
          $ref: "#/definitions/PromptCraftSubscriptionsVO"
      totalCount:
        type: integer
          
          

  SubscriptionRequestVO:
    type: object
    properties:
      data: 
        $ref: "#/definitions/PromptCraftSubscriptionsVO"

  SubscriptionkeysResponseVO:
    type: object
    properties:
      data:
        type: object
        properties:
          promptCraftKey:
            type: string

      success:
      

  SubscriptionkeysVO:
    type: object
    properties:
      privateKey:
        type: string
      publicKey:
        type: string
      userID:
        type: string

  
    