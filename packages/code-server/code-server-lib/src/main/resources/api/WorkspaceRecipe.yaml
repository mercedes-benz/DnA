# LICENSE START
#
# MIT License
#
# Copyright (c) 2019 Daimler TSS GmbH
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# LICENSE END
#
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : WorkspaceRecipe.yaml
#  **
#  ** Module     : core
#  **

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  boonbaluri
#
#  Bug Number         :
#  Changed By         :
#  Change Description :
#  Change On          :
#  Search String      :
#
#  -------------------------------------------------------------------------------------------------------

swagger: "2.0"
info:
  version: "1.0.0"
  title: "Code-server Workspace Service"
host: "localhost:7979"
basePath: "/api/1.0"
consumes:
  - "application/json"
produces:
  - "application/json"
tags:
  - name: "code-server-recipe"
    description: "This service is used to maintain code-server workspaces information."

schemes:
  - "https"

paths:

  /recipeDetails:
    get:
      tags:
        - "code-server-recipe"
      summary: "Get all recipe managment workspaces for the user."
      description: "Get all codeServer recipe managment workspaces for the user."
      operationId: "getAllRecipes"
      parameters:
        - name: offset
          in: query
          description: page number from which listing of workspaces should start. Offset. Example 2
          required: false
          type: integer
        - name: limit
          in: query
          description: page size to limit the number of workspaces, Example 15
          required: false
          type: integer
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/RecipeCollectionVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

    post:
      tags:
        - "code-server-recipe"
      summary: "Initialize/Create recipe for user in code-server-recipe."
      description: "Create recipe for user in code-server with given password"
      operationId: "createRecipe"
      parameters:
        - name: "recipeRequestVO"
          in: "body"
          description: "Request Body that contains data required for intialize code server workbench for user"
          required: true
          schema:
            $ref: "#/definitions/RecipeVO"
      responses:
        201:
          description: "Returns message of success or failure "
          schema:
            $ref: "#/definitions/InitializeRecipeVo"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/validate:
    post:
      tags:
        - "code-server-recipe"
      summary: "To validate GitHub Url and to check if user is collaborator"
      description: "To validate GitHub Url and to check if user is collaborator"
      operationId: "validateGitHub"
      parameters:
        - name: "gitHubUrl"
          in: "body"
          description: "Request Body that contains data required for intialize code server workbench for user"
          required: true
          schema:
            $ref: "#/definitions/GitHubVo"
      responses:
        201:
          description: "Returns message of success or failure "
          schema:
            $ref: "#/definitions/GenericMessage"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/{id}:
    get:
      tags:
        - "code-server-recipe"
      summary: "Get workspace recipe details for a given Id."
      description: "Get workspace recipe details for a given Id."
      operationId: "getRecipeById"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/InitializeRecipeVo"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

    delete:
      tags:
        - "code-server-recipe"
      summary: "Delete recipe with given Id."
      description: "Delete recipe for a given identifier."
      operationId: "deleteRecipe"
      parameters:
        - name: "id"
          in: "path"
          description: "recipe to be deleted"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

    put:
      tags:
        - "code-server-recipe"
      summary: "Update recipe details for a given id."
      description: "Update recipe details for a recipe given id."
      operationId: "updateRecipeById"
      parameters:
        - name: "recipeRequestVO"
          in: "body"
          description: "Request Body that contains data required for intialize code server workbench for user"
          required: true
          schema:
            $ref: "#/definitions/RecipeVO"
      responses:
        201:
          description: "Returns message of success or failure "
          schema:
            $ref: "#/definitions/InitializeRecipeVo"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/adminSoftware:
    post:
        tags:
          - "code-server-recipe"
        summary: "Create software in recipe workspace."
        description: "Create a new softwareentry in code-server recipe workspace."
        operationId: "createSoftware"
        parameters:
          - name: "softwareRequestVO"
            in: "body"
            description: "Request body containing data required to create a software entry in the recipe workspace."
            required: true
            schema:
              $ref: "#/definitions/SoftwareCollection"
        responses:
          201:
            description: "Returns message of success or failure."
            schema:
              $ref: "#/definitions/ResponseSoftwareVO"
          400:
            description: "Bad Request"
            schema:
              $ref: "#/definitions/GenericMessage"
          401:
            description: "Request does not have sufficient credentials."
          403:
            description: "Request is not authorized."
          405:
            description: "Method not allowed."
          500:
            description: "Internal error."
        
  /recipeDetails/adminSoftware/{id}:
    put:
      tags:
        - "code-server-recipe"
      summary: "Update software in recipe workspace for a given id."
      description: "Update existing softwareentry in code-server recipe workspace for a given id."
      operationId: "updateSoftwareById"
      parameters:
        - name: "softwareRequestVO"
          in: "body"
          description: "Request Body that contains data required to update software"
          required: true
          schema:
            $ref: "#/definitions/SoftwareCollection"
      responses:
          201:
            description: "Returns message of success or failure."
            schema:
              $ref: "#/definitions/ResponseSoftwareVO"
          400:
            description: "Bad Request"
            schema:
              $ref: "#/definitions/GenericMessage"
          401:
            description: "Request does not have sufficient credentials."
          403:
            description: "Request is not authorized."
          405:
            description: "Method not allowed."
          500:
            description: "Internal error."

    delete:
      tags:
        - "code-server-recipe"
      summary: "Delete software with given Id."
      description: "Delete software for a given identifier."
      operationId: "deleteSoftware"
      parameters:
        - name: "id"
          in: "path"
          description: "software to be deleted"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        404:
          description: "Not found - Software ID does not exist."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/softwareLov:
    get:
      tags:
        - "code-server-recipe"
      summary: "Get all software details in recipe"
      description: "Get all softwares details for recipe in codespace"
      operationId: "getAllsoftwareLov"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/InitializeSoftwareLovVo"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/additionalServiceLov:
    get:
      tags:
        - "code-server-recipe"
      summary: "Get all additional service Lov of recipes "
      description: "Get all additional service Lov in codespace"
      operationId: "GetAllAdditionalServiceLov"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/InitializeAdditionalServiceLovVo"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/adminService:
    post:
      tags:
        - "code-server-recipe"
      summary: "Create additional services in recipe workspace. "
      description: "Create a new additional services entry in code-server recipe workspace."
      operationId: "createAdditionalService"
      parameters:
          - name: "addServiceRequestVO"
            in: "body"
            description: "Request body containing data required to create a service entry in the recipe workspace."
            required: true
            schema:
              $ref: "#/definitions/AdditionalServiceLovVo"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/ResponseServiceVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/adminService/{id}:
    put:
      tags:
        - "code-server-recipe"
      summary: "Update additional service in recipe workspace for a given id."
      description: "Update existing additional service entry in code-server recipe workspace for a given id."
      operationId: "updateServiceById"
      parameters:
        - name: "addServiceRequestVO"
          in: "body"
          description: "Request Body that contains data required to update additional service"
          required: true
          schema:
            $ref: "#/definitions/AdditionalServiceLovVo"
      responses:
          201:
            description: "Returns message of success or failure."
            schema:
              $ref: "#/definitions/ResponseServiceVO"
          400:
            description: "Bad Request"
            schema:
              $ref: "#/definitions/GenericMessage"
          401:
            description: "Request does not have sufficient credentials."
          403:
            description: "Request is not authorized."
          405:
            description: "Method not allowed."
          500:
            description: "Internal error."

    delete:
      tags:
        - "code-server-recipe"
      summary: "Delete additional service with given Id."
      description: "Delete additional service for a given identifier."
      operationId: "deleteAddService"
      parameters:
        - name: "id"
          in: "path"
          description: "additional service to be deleted"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        404:
          description: "Not found - Additional service ID does not exist."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/recipelov:
    get:
      tags:
        - "code-server-recipe"
      summary: "Get all lov of recipes "
      description: "Get all recipes in codespace"
      operationId: "getAllrecipeLov"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/InitializeRecipeLovVo"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  # /recipeDetails/recipesByStatus:
  #     get:
  #       tags:
  #         - "code-server-recipe"
  #       summary: "Get all recipes which are in requested and accepted state, waiting for processing."
  #       description: "Get all recipes which are in requested and accepted state, waiting for processing"
  #       operationId: "getAllRecipesWhichAreInRequestedAndAcceptedState"
  #       parameters:
  #           - name: offset
  #             in: query
  #             description: page number from which listing of SecurityConfigs should start. Offset. Example 2
  #             required: false
  #             type: integer
  #           - name: limit
  #             in: query
  #             description: page size to limit the number of SecurityConfigs, Example 15
  #             required: false
  #             type: integer
  #       responses:
  #         201:
  #           description: "Returns message of success or failure"
  #           schema:
  #             $ref: "#/definitions/RecipeCollectionVO"
  #         204:
  #           description: "Fetch complete, no content found."
  #         400:
  #           description: "Bad request."
  #         401:
  #           description: "Request does not have sufficient credentials."
  #         403:
  #           description: "Request is not authorized."
  #         405:
  #           description: "Method not allowed"
  #         500:
  #           description: "Internal error"

  # /recipeDetails/{name}/accept:        
  #   post:
  #     tags:
  #       - "code-server-recipe"
  #     summary: "Accepting the changes to be added in access management , marking status as Accepted if success"
  #     description: "Accepting the changes to be added in access management system"
  #     operationId: "acceptRecipeInfo"
  #     parameters:
  #       - name: "name"
  #         in: "path"
  #         description: "Recipe name to be fetched"
  #         required: true
  #         type: "string"
  #     responses:
  #       201:
  #         description: "Returns message of success or failure"
  #         schema:
  #           $ref: "#/definitions/GenericMessage"
  #       204:
  #         description: "Fetch complete, no content found."
  #       400:
  #         description: "Bad request."
  #       401:
  #         description: "Request does not have sufficient credentials."
  #       403:
  #         description: "Request is not authorized."
  #       405:
  #         description: "Method not allowed"
  #       500:
  #         description: "Internal error"
          
  # /recipeDetails/{name}/publish:        
  #   post:
  #     tags:
  #       - "code-server-recipe"
  #     summary: "Marking status after Publishing the changes added in access management system"
  #     description: "Marking status after Publishing the changes added in access management system"
  #     operationId: "publishRecipeInfo"
  #     parameters:
  #       - name: "name"
  #         in: "path"
  #         description: "recipe name to be fetched"
  #         required: true
  #         type: "string"
  #     responses:
  #       201:
  #         description: "Returns message of success or failure"
  #         schema:
  #           $ref: "#/definitions/GenericMessage"
  #       204:
  #         description: "Fetch complete, no content found."
  #       400:
  #         description: "Bad request."
  #       401:
  #         description: "Request does not have sufficient credentials."
  #       403:
  #         description: "Request is not authorized."
  #       405:
  #         description: "Method not allowed"
  #       500:
  #         description: "Internal error"

definitions:
  GitHubVo:
    type: object
    properties: 
      gitHubUrl:
        type: string
        
  RecipeVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of recipe"
      recipeId:
        type: string
        description: "recipeId  for recipe managment"
      recipeName:
        type: string
        description: "recipeName  for recipe managment"
      recipeType:
        type: string
        enum: [public,private]
        description: "recipe type for codespace managment"
      repodetails:
        type: string
        description: "Git URL"
      diskSpace:
        type: string
        description: "disk size GB"
      minCpu:
        type: string
        description: "min CPU capacity required"
      maxCpu:
        type: string
        description: "max CPU capacity required"
      maxRam:
        type: string
        description: "min RAM capacity required"
      minRam:
        type: string
        description: "min RAM capacity required"
      deployPath:
        type: string
        description: "Deployment path required"
      gitRepoLoc:
        type: string
        description: "Git  Repo location required"
      gitPath:
        type: string
        description: "Git Path required"
      oSName:
        type: string
        enum: [Debian-OS-11]
        description: "Operating system required"
      software:
        type: array
        items:
          type: string
      additionalServices:
        type: array
        items:
          type: string
      createdOn:
        type: string
        format: date
        description: "created date for recipe managment"
      createdBy:
        $ref: "#/definitions/UserInfoVO"
      plugins:
        type: array
        items:
          type: string
      isPublic:
        type: boolean
        default: true
      gitPath:
        type: string
        description: "git path for recipe"
      gitRepoLoc:
        type: string
        description: "git repository location for recipe"
      deployPath:
        type: string
        description: "deploy path for recipe" 
      toDeployType:
        type: string
      isDeployEnabled:
        type: boolean
      # users:
      #   type: array
      #   items:
      #     $ref: "#/definitions/UserInfoVO" 
      # status:
      #   type: string
      #   description: "status of the recipe"

  RecipeSoftwareVO:
    type: object
    properties:
      softwareName:
        type: string
        description: "version and name of software for recipe"
        
  RecipeCollectionVO:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RecipeVO"
      count:
        type: integer
        description: "total number of records"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"  

  InitializeRecipeVo:
    type: object
    properties:
      data:
        type: object
        items:
          $ref: "#/definitions/RecipeVO"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"  

  InitializeSoftwareLovVo:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/SoftwareCollection"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription" 

  InitializeRecipeLovVo:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RecipeLovVO"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
  
  InitializeAdditionalServiceLovVo:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/AdditionalServiceLovVo"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"

  AdditionalServiceLovVo:
    type: object
    properties:
      serviceName:
        type: string
        description: "name of additional service"
      version:
        type: string
        description: "version of additional service"
      additionalProperties:
        $ref: "#/definitions/AdditionalPropertiesVO"
      id:
        type: string
        description: "additional service ID"
      createdOn:
        type: string
        format: date
        description: "created date for additional software"
      createdBy:
        $ref: "#/definitions/UserInfoVO"
      updatedOn:
        type: string
        format: date
        description: "updated date for additional software"
      updatedBy:
        $ref: "#/definitions/UserInfoVO"

  ResponseServiceVO:
    type: object
    properties:
      data:
        type: object
        items:
          $ref: "#/definitions/AdditionalServiceLovVo"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"

  PortVO:
    type: object
    properties: 
      protocol:
        type: string
        description: "name of protocol"
      containerPort:
        type: integer
        description: "port number of container"

  SecurityContextVO:
    type: object
    properties: 
      runAsUser:
        type: integer
        description: "value of user"

  VolumeMountsVO:
    type: object
    properties: 
      name:
        type: string
        description: "name of server"
      mountPath:
        type: string
        description: "path of the mount"

  EnvVO:
    type: object
    properties: 
      name:
        type: string
        description: "name of environment variables"
      value:
        type: string
        description: "values of environment variables"

  AdditionalPropertiesVO:
    type: object
    properties: 
      name:
        type: string
        description: "name of services"
      image:
        type: string
        description: "image of container"
      args:
        type: array
        items:
          $ref: "#/definitions/String"
      env:
        type: array
        items:
          $ref: "#/definitions/EnvVO"
      ports:
        type: array
        items:
          $ref: "#/definitions/PortVO"
      volumeMounts:
        type: array
        items:
          $ref: "#/definitions/VolumeMountsVO"
      imagePullPolicy:
        type: string
      securityContext:
        $ref: "#/definitions/SecurityContextVO"
           

  RecipeLovVO:
    type: object
    properties: 
      id:
        type: string
        description: "ID of recipe"
      recipeName:
        type: string
        description: "description of the recipe"
      aliasId:
        type: string
        description: "id for the recipes"
      osName:
        type: string
      maxRam:
        type: string
      maxCpu:
        type: string

  AdditionalServiceCollectionVo:
    type: object
    properties: 
      serviceName:
        type: string
        description: "name of the service"
      version:
        type: string
        description: "name of the service"
      additionalProperties:
        type: array
        items:
          $ref: "#/definitions/AdditionalPropertiesVO"


  ResponseSoftwareVO:
    type: object
    properties:
      data:
        type: object
        items:
          $ref: "#/definitions/SoftwareCollection"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"

  SoftwareCollection:
    type: object
    properties: 
      softwareName:
        type: string
        description: "version of the software"
      additionalProperties:
        type: string
        description: "addtional properties mentioned"
      id:
        type: string
        description: "software ID"
      createdOn:
        type: string
        format: date
        description: "created date for software"
      createdBy:
        $ref: "#/definitions/UserInfoVO"
      updatedOn:
        type: string
        format: date
        description: "updated date for software"
      updatedBy:
        $ref: "#/definitions/UserInfoVO"

      
      
